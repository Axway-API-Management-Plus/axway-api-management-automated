name: EMR-Diagnotics API

env:
  apiId: api-emr-diagnostic

on:
  push:
    branches:
      - main
    paths:
      - api-emr-diagnostic/**
  release:
    types:
      - published
    tags:
      - '*api-emr-diagnostic*'

defaults:
  run:
    working-directory: api-emr-diagnostic

jobs:
  create-latest-docker-image:
    name: Push Docker image to Docker Hub (latest)
    runs-on: ubuntu-latest
    steps:
      - uses: hmarr/debug-action@v2
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build container image
        uses: docker/build-push-action@v2
        with:
          context: ./${{ env.apiId }}/emr-diagnostic-app
          file: ./${{ env.apiId }}/emr-diagnostic-app/Dockerfile
          push: true
          tags: docker.pkg.github.com/${{ github.repository }}/${{ env.apiId }}:latest
  deploy-api-builder:
    name: Deploy API-Builder on K8S
    needs: create-latest-docker-image
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: List current directory
        run: ls -l
      - name: Update deployment file
        run: sed -i 's|<IMAGE>|docker.pkg.github.com/${{ github.repository }}/${{ env.apiId }}:'latest'|' config/api-deployment.yaml
      - name: Deploy to Kubernetes
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: apply -f ${{ env.apiId }}/config/api-deployment.yaml
      - name: Verify deployment
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: '"rollout status deployment/${{ env.apiId }}"'

  deploy-api:
    name: Deploy API on API-Management
    runs-on: ubuntu-latest
    needs: deploy-api-builder
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Deploy API
        env:
          APIM_USER: ${{ secrets.APIM_USER }}
          APIM_PASS: ${{ secrets.APIM_PASS }}
          APIM_HOST: ${{ secrets.APIM_HOST }}
          APIM_PORT: ${{ secrets.APIM_PORT }}
        run: mvn clean exec:java

#  Publish-API:
#    runs-on: ubuntu-latest
#    needs: API-Deployment
#    steps:
#      - uses: hmarr/debug-action@v2
#      - name: Publish package
#        run: mvn --batch-mode deploy
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
   
  Release-API:
    if: github.event.release.tag_name
    runs-on: ubuntu-latest
    needs: deploy-api
    steps:
      - uses: actions/checkout@v2
        with:
          ref: main
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: github
      - name: Configure Git user
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
      - name: List current directory
        run: |
          ls -la
      - name: Release prepare
        run: |
          git status
          mvn -B -f api-emr-diagnostic/pom.xml release:prepare
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: List current directory
        run: |
          ls -la
      - name: Release perform
        run: |
          mvn -B -f api-emr-diagnostic/pom.xml release:perform
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

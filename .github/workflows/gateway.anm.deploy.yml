name: "2.(M) Deploy Admin-Node-Manager"

env:
  dockerRegistry: ghcr.io
  dockerRepository: cwiechmann/axway-api-management-automated
  baseImage: "base:77-20220228-1"
  outImage: "anm"
  outImageVersion: "77-20220228-1"

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version or Date is attached to the created image. If not given, the current date is used.'
        required: false
        type: string 
      deploy_anm:
        description: 'Deploy Admin-Node-Manager'
        required: false
        default: true
        type: boolean 

defaults:
  run:
    working-directory: gateway-config

jobs:
  create-anm-docker-image:
    name: Create Admin-Node-Manager image
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.dockerRegistry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set image version
        run: |
          if [ "${{ github.event.inputs.version }}" ]; then
            echo "Using given version: ${{ github.event.inputs.version }} as image tag"
            echo "IMAGE_TAG=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          else 
            date=`echo $(date '+%Y-%m-%d-%H-%M')`
            echo "No version given, using current date: ${date}"
            echo "IMAGE_TAG=${{ env.outImageVersion }}-$(echo ${date})" >> $GITHUB_ENV
          fi
      - name: Pull base image
        run: docker pull ${{ env.dockerRegistry }}/${{ env.dockerRepository }}/${{ env.baseImage }}
      - name: Build ANM image
        run: |
          tar xvfz apigw-emt-scripts-2.4.0-20220222.150412-10.tar.gz
          echo "${{ secrets.APIGATEWAY_LICENSE }}" | base64 -d > license.lic
          ./apigw-emt-scripts-2.4.0-SNAPSHOT/build_anm_image.py --license=license.lic --default-cert --fed=anm/fed/anm.fed --metrics --merge-dir anm/merge-dir/apigateway --parent-image=${{ env.dockerRegistry }}/${{ env.dockerRepository }}/${{ env.baseImage }} --out-image=${{ env.dockerRegistry }}/${{ env.dockerRepository }}/${{ env.outImage }}:${{ env.IMAGE_TAG }}
      - name: Push image
        run: |
          docker push ${{ env.dockerRegistry }}/${{ env.dockerRepository }}/${{ env.outImage }}:${{ env.IMAGE_TAG }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: Update Helm-Value file
        run: |
          yq -i '.anm.imageTag="${{ env.IMAGE_TAG }}"' ../helm/aws-eks/axway-apim-on-aws-eks-values.yaml
      - name: 'Commit Helm-Values'
        uses: EndBug/add-and-commit@v9
        with:
          message: 'anm image tag set to ${{ env.IMAGE_TAG }}'
      - name: Helm upgrade
        if: ${{ github.event.inputs.deploy_anm }}
        run: |
          mkdir  $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 -d > $HOME/.kube/config
          helm upgrade axway-apim -n apim -f ../helm/aws-eks/axway-apim-on-aws-eks-values.yaml https://github.com/Axway/Cloud-Automation/releases/download/apim-helm-2.10.1/helm-chart-axway-apim-2.10.1.tgz


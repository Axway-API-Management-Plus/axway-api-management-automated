openapi: 3.0.1

info:
  title: Bulk Payments
  version: 0.5.2
  description: |
    # Bulk Payments API

    This API is used to initiate and get summary of bulk payments.
    Payment products allowed in this api:
    * Bulk credit transfer
    * Bulk debit transfer

    All products are represented as separate entities.



  contact:
    name: Realtime Integration Center of Excellence

tags:
  - name: BulkPayments
    description: Group Payment API for bulk payment orders.

paths:
  /api/v1/bulk-credit-transfers:
    post:
      description: |
        This method is used to initiate a bulk credit transfer.
      security:
        - openId:
            - customer
            - employee
            - client
            - third-party-customer
      operationId: initateBulkCreditTransfer
      tags:
        - BulkPayments
      parameters:
        - $ref: "#/components/parameters/X-Request-ID"
        - $ref: "#/components/parameters/X-Correlation-ID"
        - $ref: "#/components/parameters/X-Idempotency-Key"
        - $ref: "#/components/parameters/X-Reply-To"
      requestBody:
        $ref: '#/components/requestBodies/PostBulkCreditTransferRequest'
      responses:
        "202":
          $ref: '#/components/responses/PostBulkCreditTransferResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /api/v1/bulk-direct-debits:
    post:
      description: |
        This method is used to initiate a bulk direct debits.
      security:
        - openId:
            - customer
            - employee
            - client
            - third-party-customer
      operationId: initateBulkDirectDebits
      tags:
        - BulkPayments
      parameters:
        - $ref: "#/components/parameters/X-Request-ID"
        - $ref: "#/components/parameters/X-Correlation-ID"
        - $ref: "#/components/parameters/X-Idempotency-Key"
        - $ref: "#/components/parameters/X-Reply-To"
      requestBody:
        $ref: '#/components/requestBodies/PostBulkDirectDebitRequest'
      responses:
        "202":
          $ref: '#/components/responses/PostBulkDirectDebitResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /api/v1/bulk-credit-transfers/{bulkPaymentId}:
    get:
      description: |
        Gets summary of the bulk credit transfer.
      security:
        - openId:
            - customer
            - employee
            - client
            - third-party-customer
      operationId: getBulkCreditTransferSummary
      tags:
        - BulkPayments
      parameters:
        - $ref: "#/components/parameters/X-Request-ID"
        - $ref: "#/components/parameters/X-Correlation-ID"
        - $ref: "#/components/parameters/bulkPaymentId"
      responses:
        "200":
          $ref: '#/components/responses/GetBulkCreditTransfersSummaryResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'


  /api/v1/bulk-direct-debits/{bulkPaymentId}:
    get:
      description: |
        Gets summary of the specifed direct debit.
      security:
        - openId:
            - customer
            - employee
            - client
            - third-party-customer
      operationId: getBulkDirectDebitSummary
      tags:
        - BulkPayments
      parameters:
        - $ref: "#/components/parameters/X-Request-ID"
        - $ref: "#/components/parameters/X-Correlation-ID"
        - $ref: "#/components/parameters/bulkPaymentId"
      responses:
        "200":
          $ref: '#/components/responses/GetBulkDirectDebitsSummaryResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

components:
  securitySchemes:
    openId:
      type: openIdConnect
      openIdConnectUrl: /.well-known/openid-configuration
  parameters:
    bulkPaymentId:
      name: bulkPaymentId
      in: path
      description: Unique ID of the payment assigned by API provider.
      required: true
      schema:
        type: string
    X-Request-ID:
      name: X-Request-ID
      in: header
      description: ID of the request, unique to the call, as determined by the initiating party.
      required: true
      example: '99391c7e-ad88-49ec-a2ad-99ddcb1f7721'
      schema:
        type: string
        format: uuid
    X-Correlation-ID:
      name: X-Correlation-ID
      in: header
      description: |
        X-Correlation-ID will be used to track requests through all involved services to be able to graph request flows, map how services contribute to response times, identify bottle necks, etc.
        The X-Correlation-ID must be propagated unchanged in any and all downstream services.
      required: true
      example: '99391c7e-ad88-49ec-a2ad-99ddcb1f7721'
      schema:
        type: string
        format: uuid
    X-Idempotency-Key:
      name: X-Idempotency-Key
      in: header
      description: Unique request identifier to support idempotency.
      required: false
      example: 'e457b5a2e4d86bd1198ee56343ba864fe8b2'
      schema:
        type: string

    X-Reply-To:
      name: X-Reply-To
      in: header
      description: Identifier of requesting party that will be included in X-Replied-To header of bulk payment status API so status message can be routed to proper client application.
      schema:
        type: string


  requestBodies:
    PostBulkCreditTransferRequest:
      required: true
      description: |
        Request to initiate bulk credit transfer.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BulkCreditTransfer'

        application/xml:
          schema:
            $ref: '#/components/schemas/pain.001'

    PostBulkDirectDebitRequest:
      required: true
      description: |
        Request to initiate bulk direct debit.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BulkDirectDebit'
        application/xml:
          schema:
            $ref: '#/components/schemas/pain.008'

  responses:
    PostBulkCreditTransferResponse:
      description: |
        Bulk credit transfer response accepted to process.
        Request was technically correct, for detailed response call get bulk credit transfers (/api/v1/bulk-credit-transfers/{bulkPaymentId})

      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BulkInitiationResponse'
    PostBulkDirectDebitResponse:
      description: |
        Bulk payment accepted to process.
        Request was technically correct, for detailed response call get bulk direct debits (/api/v1/bulk-direct-debits/{bulkPaymentId})

      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BulkInitiationResponse'
    GetBulkCreditTransfersSummaryResponse:
      description: |
        Payment created with summary response.
        Allows clients to be notified that the payment order was initially
        validated but is undergoing additional processing.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BulkStatusReport'
        application/xml:
          schema:
            $ref: '#/components/schemas/pain.002'
    GetBulkDirectDebitsSummaryResponse:
      description: |
        Payment created with summary response.
        Allows clients to be notified that the payment order was initially
        validated but is undergoing additional processing.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BulkStatusReport'
        application/xml:
          schema:
            $ref: '#/components/schemas/pain.002'
    ErrorResponse:
      description: Unexpected Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:

    BulkCreditTransfer:
      type: object
      description: |
        Object contains required structure to initate bulk credit transfer.
      properties:
        groupHeader:
          $ref: '#/components/schemas/GroupHeader'
        paymentInformation:
          description: |
            A list of payment information bulks of credit transactions.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/CreditPaymentInformationItem'
        attachments:
          description: A list of attachments
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
      required:
        - groupHeader
        - paymentInformation

    BulkDirectDebit:
      type: object
      description: |
        Object contains required structure to initate bulk of direct debits.
      properties:
        groupHeader:
          $ref: '#/components/schemas/GroupHeader'
        paymentInformation:
          description: |
            A list of payment information bulks of debit transactions.
          type: array
          items:
            $ref: '#/components/schemas/DirectDebitPaymentInformationItem'
        attachments:
          description: A list of attachments.
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
      required:
        - groupHeader
        - paymentInformation

    Attachment:
      type: object
      description: |
        Attachment for bulk credit transfers or bulk payments.
      properties:
        type:
          $ref: '#/components/schemas/AttachmentType'
        name:
          type: string
          maxLength: 70
        content:
          description: |
            Base 64 encoded attachment content.
          type: string
          format: byte
      required:
        - type
        - name
        - content

    AttachmentType:
      type: string
      description: |
        Attachment file type.
      enum:
        - PDF
      x-extensible-enum:
        - PDF


    GroupHeader:
      description: |
        Total set of information shared by all transactions included in the message.
      properties:
        messageId:
          $ref: '#/components/schemas/UniqueIdentification'
        creationDateTime:
          description: Date and time at which the message was created.
          type: string
          example: '2019-09-21T17:32:28Z'
          format: date-time
        authorisation:
          $ref: '#/components/schemas/Authorisation'
        controlSum:
          example: '42.13'
          description: |
            Total amount of all individual transaction amounts in the batch.
          type: string
          minLength: 1
          maxLength: 15
        numberOfTransactions:
          type: integer
          format: int64
          example: 1
          description: |
            Total number of individual transactions contained in the batch.
          minLength: 1
          maxLength: 15
        initiatingParty:
          $ref: '#/components/schemas/InitiatingParty'
        forwardingAgent:
          $ref: '#/components/schemas/AccountAgent'
      required:
        - messageId
        - creationDateTime
        - controlSum
        - numberOfTransactions
        - initiatingParty

    InitiatingParty:
      type: object
      description: |
        Party initiating the transaction; it can be either the debtor himself or a party acting on behalf of the debtor.
        Either name or organizationId must be provided.
      properties:
        name:
          type: string
          example: 'Company XYZ'
          description: Initiation Party Name.
          minLength: 1
          maxLength: 140
        identification:
          type: object
          properties:
            organisationIdentification:
              $ref: '#/components/schemas/OrganisationIdentification'
        contactDetails:
          $ref: '#/components/schemas/ContactDetails'

    OrganisationIdentification:
      type: object
      description: Identification of an organisation.
      properties:
        bic:
          $ref: '#/components/schemas/Bicfi'
        otherIdentification:
          $ref: '#/components/schemas/OtherOrganisationIdentification'

    Bicfi:
      description: BICFI ISO 9362
      type: string
      minLength: 8
      maxLength: 11
      pattern: '^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$'
      example: 'AAAADEBBXXX'

    OtherOrganisationIdentification:
      description: |
        Other Identification of an organisation.
      type: object
      properties:
        id:
          type: string
          example: '47110815'
          minLength: 1
          maxLength: 35
      required:
        - id

    ContactDetails:
      type: object
      description: |
        Contains contact data like phone number or/and email.
      properties:
        phoneNumber:
          type: string
          minLength: 1
          maxLength: 35
        emailAddress:
          type: string
          minLength: 1
          maxLength: 140

    CreditPaymentInformationItem:
      type: object
      description: |
        A bulk of credits. Set of characteristics that applies to the debit side of the payment transactions included in the credit transfer initiation.
      properties:
        paymentInformationId:
          example: 'PMT-12345'
          type: string
          description: |
            Unique identification of each Payment Information. It is recommended to provide this element.
            Reference assigned by the sending party to unambiguously identify this batch within the message.
            This reference will be returned on the customer statement and on the camt.053 from the bank.
          minLength: 1
          maxLength: 35
        paymentMethod:
          $ref: '#/components/schemas/CreditPaymentMethod'
        batchBooking:
          description: |
            If this element equals "true", the sender prefers only one booking entry.
            When value is not present single transaction booking is the standard.
          example: true
          type: boolean
        numberOfTransactions:
          example: 1
          type: integer
          format: int64
          minLength: 1
          maxLength: 15
          description: Total number of individual transactions contained in the bulk.
        controlSum:
          example: '42.13'
          type: string
          minLength: 1
          maxLength: 15
          description: Total amount of all individual transaction amounts in this bulk.
        paymentTypeInformation:
          $ref: '#/components/schemas/CreditPaymentTypeInformation'
        requestedExecutionDate:
          description: |
            Requested execution date. This is the date on which the debtor's account is to be debited.
            If it is not possible to debit the account with the requested date (e.g. missing the cut of time) the payment will be booked on the next possible date.
          type: string
          format: date
          example: '2019-09-21'
        debtor:
          $ref: '#/components/schemas/PartyIdentification'
        debtorAccount:
          $ref: '#/components/schemas/Account'
        debtorAgent:
          $ref: '#/components/schemas/AccountAgent'
        ultimateDebtor:
          $ref: '#/components/schemas/UltimateCustomer'
        chargeBearer:
          $ref: '#/components/schemas/ChargeBearer'
        chargesAccount:
          $ref: '#/components/schemas/Account'
        transactionInformation:
          description: |
            The individual payment items/transactions.
          type: array
          items:
            $ref: '#/components/schemas/CreditTransactionItem'
      required:
        - paymentMethod
        - numberOfTransactions
        - requestedExecutionDate
        - debtor
        - debtorAccount
        - debtorAgent
        - transactionInformation

    DirectDebitPaymentInformationItem:
      type: object
      properties:
        paymentInformationId:
          type: string
          example: 'PMT-12354'
          minLength: 1
          maxLength: 16
          description: |
            Unique identification of each Payment Information.
            Reference assigned by the sending party to unambiguously identify this batch within the message.
            This reference will be returned on the customer statement and on the camt.053 from the bank.
        paymentMethod:
          $ref: '#/components/schemas/DebitPaymentMethod'
        batchBooking:
          description: |
            If this element equals true, the sender prefers only one booking entry.
          example: true
          type: boolean
        numberOfTransactions:
          type: integer
          format: int64
          example: 1
          description: Total number of individual transactions contained in the batch.
          minLength: 1
          maxLength: 15
        controlSum:
          description: Total amount of all individual transaction amounts in the batch.
          example: '42.13'
          type: string
          minLength: 1
          maxLength: 15
        paymentTypeInformation:
          $ref: '#/components/schemas/DebitPaymentTypeInformation'
        requestedCollectionDate:
          description: |
            Requested collection date. This is the date on which the debtor's account is to be debited.
          example: '2019-09-21'
          type: string
          format: date
        creditor:
          $ref: '#/components/schemas/PartyIdentification'
        creditorAccount:
          $ref: '#/components/schemas/Account'
        creditorAgent:
          $ref: '#/components/schemas/AccountAgent'
        ultimateCreditor:
          $ref: '#/components/schemas/UltimateCustomer'
        chargeBearer:
          $ref: '#/components/schemas/ChargeBearer'
        creditorSchemeId:
          $ref: '#/components/schemas/PartyIdentification'
        transactionInformation:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/DirectDebitTransactionItem'
      required:
        - paymentInformationId
        - paymentMethod
        - numberOfTransactions
        - requestedCollectionDate
        - creditor
        - creditorAccount
        - creditorAgent
        - transactionInformation

    DebitPaymentMethod:
      description: |
        Defines the means of payment that will be used to move the amount of money.
      type: string
      example: 'DD'
      x-extensible-enum:
        - DD #Credit Transfer Initiation (SEPA)

    DebitPaymentTypeInformation:
      type: object
      description: |
        Specifies the type of the underlying credit transfer. Either provided in bulk or on trx level, not both.
      properties:
        serviceLevel:
          $ref: '#/components/schemas/ServiceLevel'
        localInstrument:
          description: Specifies the used service.
          type: object
          properties:
            code:
              $ref: '#/components/schemas/LocalInstrumentType'
          required:
            - code
        sequenceType:
          $ref: '#/components/schemas/SequenceType'
        categoryPurpose:
          $ref: '#/components/schemas/CategoryPurpose'
      required:
        - serviceLevel

    ClearingChannel:
      type: string
      enum:
        - RTGS
        - RTNS
        - MPNS
        - BOOK

    PaymentTypeInformation:
      type: object
      description: |
        Specifies the type of the underlying credit transfer. Either provided in bulk or on trx level, not both.
      properties:
        serviceLevel:
          $ref: '#/components/schemas/ServiceLevel'
        localInstrument:
          $ref: '#/components/schemas/LocalInstrument'
        sequenceType:
          #<PmtTpInf><SvcLvl>
          $ref: '#/components/schemas/SequenceType'
        categoryPurpose:
          $ref: '#/components/schemas/CategoryPurpose'
        instructionPriority:
          $ref: '#/components/schemas/InstructionPriority'
        clearingChannel:
          $ref: '#/components/schemas/ClearingChannel'
      required:
        - serviceLevel

    LocalInstrumentType:
      type: string
      x-enum-elements:
        - name: B2B
          description: 'DD Sepa rulebook 4.1'
        - name: CORE
          description: 'DD Sepa rulebook 6.0'
        - name: COR1
          description: ''
      enum:
        - B2B
        - CORE
        - COR1

    SequenceType:
      type: string
      description: |
        Specifies the purpose of the payment based on a set of pre-defined categories.
      x-enum-elements:
        - name: FRST
          description: First direct debit.
        - name: RCUR
          description: Recurring direct debit.
        - name: FNAL
          description: Final direct debit.
        - name: OOFF
          description: One off direct debit.
      enum:
        - FRST
        - RCUR
        - FNAL
        - OOFF

    DirectDebitTransactionItem:
      type: object
      description: |
        Definition of debtor data part in direct debits.
      properties:
        paymentIdentification:
          $ref: '#/components/schemas/PaymentIdentification'
        instructedAmount:
          $ref: '#/components/schemas/Amount'
        chargeBearer:
          $ref: '#/components/schemas/ChargeBearer'
        directDebitTransaction:
          $ref: '#/components/schemas/DirectDebitTransaction'
        debtor:
          $ref: '#/components/schemas/PartyIdentification'
        debtorAccount:
          $ref: '#/components/schemas/Account'
        debtorAgent:
          $ref: '#/components/schemas/AccountAgent'
        ultimateDebtor:
          $ref: '#/components/schemas/UltimateCustomer'
        purpose:
          $ref: '#/components/schemas/Purpose'
        remittanceInformation:
          $ref: '#/components/schemas/RemittanceInformation'
      required:
        - paymentIdentification
        - instructedAmount
        - directDebitTransaction
        - debtor
        - debtorAccount
        - debtorAgent

    DirectDebitTransaction:
      type: object
      description: |
        Transaction iformation
      properties:
        mandateInformation:
          $ref: '#/components/schemas/MandateInformation'
        creditorSchemeIdentification:
          $ref: '#/components/schemas/PartyIdentification'
      required:
        - mandateInformation

    MandateInformation:
      type: object
      properties:
        mandateId:
          $ref: '#/components/schemas/UniqueIdentification'
        dateOfSignature:
          type: string
          format: date
          example: '2019-08-02'
        amendmentIndicator:
          type: boolean
          description: "Indicates changes to the original mandate"
          example: false
        amendmentDetails:
          $ref: '#/components/schemas/MandateAmendmentDetails'
        electronicSignature:
          type: string
          maxLength: 1025
        firstCollectionDate:
          $ref: '#/components/schemas/DateSchema'
        finalCollectionDate:
          $ref: '#/components/schemas/DateSchema'
        frequency:
          $ref: '#/components/schemas/Frequency'
        reason:
          $ref: '#/components/schemas/MandateSetupReason'
        trackingDays:
          type: string
          pattern: '[0-9]{2}'
      required:
        - mandateId
        - dateOfSignature

    MandateTypeInformation:
      type: object
      properties:
        serviceLevel:
          $ref: '#/components/schemas/ServiceLevel'
        categoryPurpose:
          $ref: '#/components/schemas/CategoryPurpose'
        localInstrument:
          $ref: '#/components/schemas/LocalInstrument'
        mandateClassification:
          $ref: '#/components/schemas/MandateClassification'

    MandateClassification:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/MandateClassificationCode'
        party:
          type: string
          maxLength: 35

    MandateClassificationCode:
      type: string
      enum:
        - FIXE
        - USGB
        - VARI

    CreditTransferMandateInformation:
      type: object
      properties:
        mandateId:
          $ref: '#/components/schemas/UniqueIdentification'
        type:
          $ref: '#/components/schemas/MandateTypeInformation'
        dateOfSignature:
          $ref: '#/components/schemas/DateSchema'
        dateOfVerification:
          $ref: '#/components/schemas/DateTimeSchema'
        electronicSignature:
          type: string
          maxLength: 1025
        firstPaymentDate:
          $ref: '#/components/schemas/DateSchema'
        finalPaymentDate:
          $ref: '#/components/schemas/DateSchema'
        frequency:
          $ref: '#/components/schemas/Frequency'
        reason:
          $ref: '#/components/schemas/MandateSetupReason'
      required:
        - mandateId
        - dateOfSignature


    MandateAmendmentDetails:
      type: object
      #<MndtRltdInf><AmdmntInfDtls>
      properties:
        originalCreditorSchemeIdentification:
          $ref: '#/components/schemas/PartyIdentification'
        originalCreditorAgent:
          $ref: '#/components/schemas/AccountAgent'
        originalCreditorAgentAccount:
          $ref: '#/components/schemas/CashAccount'
        originalMandateId:
          $ref: '#/components/schemas/UniqueIdentification'
        originalDebtor:
          $ref: '#/components/schemas/PartyIdentification'
        originalDebtorAccount:
          $ref: '#/components/schemas/CashAccount'
          #<MndtRltdInf><AmdmntInfDtls><OrgnlDbtrAcct>
        originalDebtorAgent:
          $ref: '#/components/schemas/AccountAgent'
          #<MndtRltdInf><AmdmntInfDtls><OrgnlDbtrAcct>
        originalFinalCollectionDate:
          $ref: '#/components/schemas/DateSchema'
        originalFrequency:
          $ref: '#/components/schemas/Frequency'
        originalReason:
          $ref: '#/components/schemas/MandateSetupReason'
        originalTrackingDays:
          type: string
          pattern: '[0-9]{2}'

    MandateSetupReason:
      type: object
      properties:
        code:
          type: string
          minLength: 1
          maxLength: 4
        party:
          type: string
          maxLength: 70


    Frequency:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/FrequencyCode'
        period:
          $ref: '#/components/schemas/FrequencyPeriod'
        pointInTime:
          $ref: '#/components/schemas/FrequencyAndMoment'

    FrequencyAndMoment:
      type: object
      properties:
        countPerPeriod:
          type: string
          pattern: '[0-9]{2}'
        type:
          $ref: '#/components/schemas/FrequencyCode'


    FrequencyPeriod:
      type: object
      properties:
        countPerPeriod:
          type: number
        type:
          $ref: '#/components/schemas/FrequencyCode'
    FrequencyCode:
      type: string
      enum:
        - YEAR
        - MNTH
        - QURT
        - MIAN
        - WEEK
        - DAIL
        - ADHO
        - INDA
        - FRTN

    PartyChoice:
      type: object
      properties:
        party:
          $ref: '#/components/schemas/PartyIdentification'
        agent:
          $ref: '#/components/schemas/AccountAgent'

    PartyIdentification:
      type: object
      description: Can be provided on bulk or transaction level. A specification on both levels is not allowed.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 140
        identification:
          $ref: '#/components/schemas/Party'
        postalAddres:
          $ref: '#/components/schemas/Address'
        contactDetails:
          $ref: '#/components/schemas/ContactDetails'
        countryOfResidence:
          $ref: '#/components/schemas/Country'

    Party:
      type: object
      properties:
        privateIdentification:
          $ref: '#/components/schemas/PrivateIdentification'
        organisationIdentification:
          $ref: '#/components/schemas/OrganisationIdentification'

    CreditPaymentMethod:
      description: |
        Defines the means of payment that will be used to move the amount of money.
      type: string
      example: 'TRF'
      enum:
        - TRF #Credit Transfer Initiation (SEPA)
        - TRA #Credit Transfer Initiation with confirmation, SWIFT-Confirmation (None-Sepa)
        - CHK #cheque payments (None-Sepa)

    PaymentMethod:
      description: |
        Defines the means of payment that will be used to move the amount of money.
      type: string
      example: 'TRF'
      enum:
        - DD
        - TRF #Credit Transfer Initiation (SEPA)
        - TRA #Credit Transfer Initiation with confirmation, SWIFT-Confirmation (None-Sepa)
        - CHK #cheque payments (None-Sepa)

    CreditPaymentTypeInformation:
      type: object
      description: |
        Specifies the type of the underlying credit transfer.
      properties:
        serviceLevel:
          $ref: '#/components/schemas/ServiceLevel'
        categoryPurpose:
          $ref: '#/components/schemas/CategoryPurpose'
        localInstrument:
          $ref: '#/components/schemas/LocalInstrument'
        instructionPriority:
          $ref: '#/components/schemas/InstructionPriority'

    ServiceLevel:
      description: |
        Specifies the terms and rules for the processing of the transaction.
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ServiceLevelCode'
        proprietary:
          minLength: 1
          maxLength: 35
          type: string

    ServiceLevelCode:
      type: string
      description: |
        Payment priority
      example: 'SEPA'
      x-enum-elements:
        - name: SEPA
          description: Sepa non urgent payment.
        - name: SDVA
          description: Sepa Same day value payment.
        - name: NURG
          description: None urgent payment.
        - name: URGP
          description: Urgent payment.
      x-extensible-enum:
        - SEPA
        - SDVA
        - NURG
        - URGP

    CategoryPurpose:
      description: |
        Specifies the purpose of the payment based on a set of pre-defined categories.
      type: object
      properties:
        code:
          minLength: 1
          maxLength: 4
          type: string
        proprietary:
          minLength: 1
          maxLength: 35
          type: string

    LocalInstrument:
      description: Specifies the used service.
      type: object
      properties:
        code:
          minLength: 1
          maxLength: 4
          type: string
        proprietary:
          minLength: 1
          maxLength: 35
          type: string

    InstructionPriority:
      description: Serves the closer specification of the transfer priority.
      type: string
      minLength: 1
      maxLength: 4
      x-enum-elements:
        - name: NORM
          description: Normal priority
        - name: HIGH
          description: High priority
      enum:
        - NORM
        - HIGH

    Address:
      type: object
      properties:
        country:
          $ref: '#/components/schemas/Country'
        street:
          type: string
          description: Street name
          example: 'Am Stadtpark'
          minLength: 1
          maxLength: 70
        buildingNumber:
          type: string
          description: Building number
          example: '9'
          minLength: 1
          maxLength: 16
        city:
          type: string
          description: City
          example: 'Vienna'
          minLength: 1
          maxLength: 35
        postalCode:
          description: Postal Code
          example: '1030'
          type: string
          minLength: 1
          maxLength: 16
        addressLines:
          description: Alternative to the structured format giving the address multiple lines.
          type: array
          items:
            maxItems: 2
            type: string
            minLength: 1
            maxLength: 70
          example: ['Am Stadtpark 9', '1030 Vienna, Austria']

    Country:
      type: string
      description: Country in ISO 2 letter code.
      example: 'AT'
      minLength: 2
      maxLength: 2
      pattern: '^[A-Z]{2,2}$'

    Account: #MIgrate to CashAccount
      type: object
      description: |
        Account identification
      properties:
        identification:
          $ref: '#/components/schemas/AccountIdentification'
        currency:
          $ref: '#/components/schemas/Currency'
      required:
        - identification

    CashAccount:
      type: object
      description: |
        Account identification
      properties:
        name:
          type: string
          maxLength: 70
        type:
          type: string
          minLength: 1
          maxLength: 4
        identification:
          $ref: '#/components/schemas/AccountIdentification'
        currency:
          $ref: '#/components/schemas/Currency'
      required:
        - identification

    AccountIdentification:
      description: |
        Required iban or otherId
      type: object
      properties:
        iban:
          type: string
          description: Account IBAN.
          example: 'AT913225000000420018'
          minLength: 1
          maxLength: 34
          pattern: '^[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}$'
        otherIdentification:
          $ref: '#/components/schemas/OtherIdentification'

    OtherIdentification:
      description: |
        Other identification of an account or agent
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UniqueIdentification'
        issuer:
          type: string
          minLength: 1
          maxLength: 35
        scheme:
          $ref: '#/components/schemas/OtherScheme'

    OtherScheme:
      type: object
      properties:
        code:
          minLength: 1
          maxLength: 4
          type: string
        proprietary:
          minLength: 1
          maxLength: 35
          type: string

    Authorisation:
      description: Specifies the authorisation details.
      type: object
      properties:
        #<GrpHdr><Authstn><Cd>
        code:
          description: |
            Specifies the level of approval depending on a number of factors, including payment type,
            threshold amount or local country or operations practice.
            - **AUTH**  Indicates a file has been pre authorised or approved within the originating customer
                        environment and no further approval is required.
            - **FDET**  Indicates that a file requires additional file level approval, with the ability to view
                        both the payment information block and supporting customer credit transaction detail.
            - **FSUM**  Indicates that a file requires additional file level approval, with the ability to view
                        only the payment information block level information.
            - **ILEV**  Indicates that a file requires all customer transactions to be authorised or approved.
          minLength: 1
          maxLength: 4
          type: string
          enum:
            - AUTH
            - FDET
            - FSUM
            - ILEV
        #<GrpHdr><Authstn><Prtry>
        proprietary:
          minLength: 1
          maxLength: 35
          type: "string"


    AccountAgent:
      type: object
      description: |
        The Financial institution which is servicing an account. Either BIC name of otherID are required.
      properties:
        financialInstitutionIdentification:
          $ref: '#/components/schemas/FinancialInstitutionIdentification'
        address:
          $ref: '#/components/schemas/Address'
      required:
        - financialInstitutionIdentification

    FinancialInstitutionIdentification:
      type: object
      properties:
        bic:
          $ref: '#/components/schemas/Bicfi'
        clearingSystemMemberIdentification:
          $ref: '#/components/schemas/ClearingSystemMemberIdentification'
        name:
          type: string
          description: Name of the account servicing institution. Only used for creditor agent.
          example: 'EXAMPLE BANK'
          minLength: 1
          maxLength: 140
        otherIdentification:
          $ref: '#/components/schemas/OtherIdentification'

    ClearingSystemMemberIdentification:
      type: object
      description: Information used to identify a member within a clearing system.
      properties:
        clearingSystemIdentification:
          $ref: '#/components/schemas/ClearingSystemIdentification'
        memberIdentification:
          $ref: '#/components/schemas/MemberIdentification'

    ClearingSystemIdentification:
      type: object
      description: Specification of a pre-agreed offering between clearing agents or the channel through which
        the payment instruction is processed.
      properties:
        code:
          type: string
          description: Identification of a clearing system, in a coded form as published in an external list.
          maxLength: 5
        proprietary:
          type: string
          description: |
            Identification code for a clearing system, that has not yet been identified in the list of clearing systems.
          maxLength: 35

    MemberIdentification:
      type: string
      description: Identification of a member of a clearing system.
      maxLength: 35


    UltimateCustomer:
      #TODO verify fields
      description: Identifies the ultimate customer who is either a Debtor or Creditor.
      type: object
      properties:
        name:
          type: string
          description: Name of the Customer.
          example: 'Company XYZ'
          minLength: 1
          maxLength: 140
          #<Nm>
        identification:
          type: object
          properties:
            organisationIdentification:
              $ref: '#/components/schemas/OrganisationIdentification'
          required:
            - organisationIdentification

    ChargeBearer:
      description: Specifies which party/parties will bear the charges associated with the processing of the payment transaction.
      example: 'SLEV'
      x-enum-elements:
        - name: CRED
          description: 'CREDITOR'
        - name: DEBT
          description: 'DEBTOR'
        - name: SHAR
          description: 'SHARED'
        - name: SLEV
          description: 'SLEV'
      type: string
      enum:
        - CRED
        - DEBT
        - SHAR
        - SLEV

    CreditTransactionItem:
      type: object
      properties:
        paymentIdentification:
          $ref: '#/components/schemas/PaymentIdentification'
        amount:
          $ref: '#/components/schemas/CreditTransferAmount'
          #<Amt>
        exchangeRateInformation:
          $ref: '#/components/schemas/ExchangeRateInformation'
        chargeBearer:
          $ref: '#/components/schemas/ChargeBearer'
          #<ChrgBr>
        intermediary:
          type: array
          items:
            $ref: '#/components/schemas/Intermediary'
          #mapping from <IntrmyAgt1> <IntrmyAgt1Acct>
        creditor:
          $ref: '#/components/schemas/PartyIdentification'
        creditorAccount:
          $ref: '#/components/schemas/Account'
          #<CdtrAcct>
        creditorAgent:
          $ref: '#/components/schemas/AccountAgent'
          #<CdtrAgt>
        ultimateCreditor:
          $ref: '#/components/schemas/UltimateCustomer'
          #<UltmtCdtr>
        purpose:
          $ref: '#/components/schemas/Purpose'
          #<Purp>
        remittanceInformation:
          $ref: '#/components/schemas/RemittanceInformation'
          #<RmtInf>
        regulatoryReporting:
          type: array
          items:
            $ref: '#/components/schemas/RegulatoryReporting'
          #<RgltryRptg>
      required:
        - paymentIdentification
        - amount
        - creditor
        - creditorAccount

    PaymentIdentification:
      type: object
      properties:
        instructionId:
          $ref: '#/components/schemas/UniqueIdentification'
        endToEndId:
          $ref: '#/components/schemas/EndToEndIdentification'
      required:
        - endToEndId

    CreditTransferAmount:
      type: object
      description: Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party. The instructedAmount is the amount as ordered by the initiating party.
      properties:
        instructedAmount:
          $ref: '#/components/schemas/Amount'
        equivalentAmount:
          $ref: '#/components/schemas/EquivalentAmount'

    Amount:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/Currency'
        amount:
          type: number
          description: The amount given with fractional digits.
          example: 123.45
      required:
        - currency
        - amount

    EquivalentAmount:
      description: Amount of money to be moved between the debtor and creditor, expressed in the currency of the debtor's account, and the currency in which the amount is to be moved.
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
          #<Amt><EqvtAmt><Amt Ccy="">
        currencyOfTransfer:
          $ref: '#/components/schemas/Currency'
      required:
        - amount
        - currencyOfTransfer

    ExchangeRateInformation:
      description: Set of elements used to provide details on the currency exchange rate and contract.
      type: object
      properties:
        exchangeRate:
          type: number
          description: Exchange rate applied.
          example: 1.54
        rateType:
          $ref: '#/components/schemas/RateType'
        contractId:
          type: string
          description: Reference of underlying contract.
          minLength: 1
          maxLength: 35
          example: 'ABC018341'

    RateType:
      type: string
      example: 'AGRD'
      enum:
        - SPOT
        - SALE
        - AGRD

    Intermediary:
      type: object
      description: |
        Agent and Account between the debtor and the creditor.
      properties:
        account:
          $ref: '#/components/schemas/Account'
        agent:
          $ref: '#/components/schemas/AccountAgent'

    Purpose:
      type: object
      properties:
        code:
          description: ''
          example: 'SALA'
          minLength: 1
          maxLength: 4
          type: string
      required:
        - code

    RemittanceInformation:
      type: object
      description: |
        Remittance information for the transaction.
      properties:
        structured:
            $ref: '#/components/schemas/RemittanceInformationStructured'
        unstructured:
          description: Unstructed remittance information
          type: string
          example: 'Ref Number Merchant'
          minLength: 1
          maxLength: 140


    RemittanceInformationStructured:
      description: |
        Structured remittance information.
      type: array
      items:
        $ref: "#/components/schemas/RemittanceInformationStructuredItem"

    RemittanceInformationStructuredItem:
      description: |
        Identification of debtor account used for specific transfer. Multiple identification schemas are aplicable but not all must be supported by specific NWU.
      type: object
      oneOf:
        - $ref: "#/components/schemas/CreditorReferenceInformation"
        - $ref: '#/components/schemas/ReferredDocumentInformation'
        - $ref: "#/components/schemas/BGBudgetaryPaymentInformation"
        - $ref: "#/components/schemas/BGMultiLineBudgetaryPaymentInformation"
        - $ref: '#/components/schemas/BGSebraPaymentInformation'
        - $ref: '#/components/schemas/XKReferenceInformation'
        - $ref: '#/components/schemas/RSDomesticReferenceInformation'
        - $ref: '#/components/schemas/RSInternationalReferenceInformation'
      discriminator:
        propertyName: structureType
        mapping:
          CREDITOR_REFERENCE: "#/components/schemas/CreditorReferenceInformation"
          REFERRED_DOCUMENT: "#/components/schemas/ReferredDocumentInformation"
          BG_BUDGETARY_PAYMENT: "#/components/schemas/BGBudgetaryPaymentInformation"
          BG_BUDGETARY_MULTILINE_PAYMENT: "#/components/schemas/BGMultiLineBudgetaryPaymentInformation"
          BG_SEBRA_PAYMENT: "#/components/schemas/BGSebraPaymentInformation"
          XK_REFERENCE: '#/components/schemas/XKReferenceInformation'
          RS_DOMESTIC_REFERENCE: '#/components/schemas/RSDomesticReferenceInformation'
          RS_INTERNATIONAL_REFERENCE: '#/components/schemas/RSInternationalReferenceInformation'

    CreditorReferenceInformation:
      type: object
      required:
        - structureType
      properties:
        structureType:
          type: string
          description: Discriminator value. Must be equal to 'CREDITOR_REFERENCE'.
          enum:
            - CREDITOR_REFERENCE
          example: 'CREDITOR_REFERENCE'
        reference:
          description: The actual reference.
          type: string
          minLength: 1
          maxLength: 35
          example: '234345-4343-44'
        code:
          description: "referenceType"
          type: string
          minLength: 1
          maxLength: 4
          example: 'HR00'
        issuer:
          description: "referenceIssuer"
          type: string
          minLength: 1
          maxLength: 35
          example: 'referenceIssuer'

    ReferredDocumentInformation:
      type: object
      required:
        - structureType
      properties:
        structureType:
          type: string
          description: Discriminator value. Must be equal to 'REFERRED_DOCUMENT'.
          enum:
            - REFERRED_DOCUMENT
          example: 'REFERRED_DOCUMENT'
        code:
          description: "Special Code"
          type: string
          minLength: 1
          maxLength: 35
          example: 'MSIN or CNFA etc'
        proprietary:
          description: "Proprietary"
          type: string
          minLength: 1
          maxLength: 35
          example: 'Proprietary'
        issuer:
          description: "referenceIssuer"
          type: string
          minLength: 1
          maxLength: 35
          example: 'referenceIssuer'
        number:
          description: "Loan Number"
          type: string
          minLength: 1
          maxLength: 35
          example: 'LON124546'
        relatedDate:
          type: string
          format: date
          example: '2019-09-21'

    BGBudgetaryPaymentInformation:
      type: object
      description: BGN budget transfers remittance information.
      required:
        - structureType
        - taxPayerName
        - taxPayerId
        - taxPayerType
      properties:
        structureType:
          type: string
          description: Discriminator value. Must be equal to 'BG_BUDGETARY_PAYMENT'.
          enum:
            - BG_BUDGETARY_PAYMENT
          example: 'BG_BUDGETARY_PAYMENT'
        regulatoryReportType:
          $ref: "#/components/schemas/BGRegulatoryReportType"
        documentNumber:
          $ref: "#/components/schemas/BGBudgetDocumentNumber"
        documentDate:
          description: Document Date issued by Government authority.
          type: string
          format: date
        taxPayerId:
          $ref: "#/components/schemas/BGTaxPayerId"
        taxPayerType:
          $ref: "#/components/schemas/BGTaxPayerType"
        taxPayerName:
          $ref: "#/components/schemas/BGTaxPayerName"
        paymentCategory:
          $ref: "#/components/schemas/BGPaymentCategory"
        debtorPaymentCategory:
          $ref: "#/components/schemas/BGPaymentCategory"
        fromDate:
          description: From Date - start of period date.
          type: string
          format: date
        endDate:
          description: End Date - end of period date.
          type: string
          format: date

    BGMultiLineBudgetaryPaymentInformation:
      type: object
      description: |
        BGN multi-line budget transfers remittance information.
      required:
        - structureType
        - taxPayerName
        - taxPayerId
        - taxPayerType
        - multiLineBudgetDetails
      properties:
        structureType:
          type: string
          description: Discriminator value. Must be equal to 'BG_BUDGETARY_MULTILINE_PAYMENT'.
          enum:
            - BG_BUDGETARY_MULTILINE_PAYMENT
          example: 'BG_BUDGETARY_MULTILINE_PAYMENT'
        taxPayerId:
          $ref: "#/components/schemas/BGTaxPayerId"
        taxPayerType:
          $ref: "#/components/schemas/BGTaxPayerType"
        taxPayerName:
          $ref: "#/components/schemas/BGTaxPayerName"
        debtorPaymentCategory:
          $ref: "#/components/schemas/BGPaymentCategory"
        multiLineDetails:
          type: array
          items:
            $ref: "#/components/schemas/BGBudgetaryPaymentDetailsItem"
          minItems: 1
          maxItems: 4

    BGBudgetaryPaymentDetailsItem:
      type: object
      description: Details item for budget payments.
      properties:
        paymentCategory:
          $ref: "#/components/schemas/BGPaymentCategory"
        itemAmount:
          $ref: "#/components/schemas/Amount"
        regulatoryReportType:
          $ref: "#/components/schemas/BGRegulatoryReportType"
        documentNumber:
          $ref: "#/components/schemas/BGBudgetDocumentNumber"
        documentDate:
          description: Document Date issued by Government authority.
          type: string
          format: date
        fromDate:
          description: From Date - start of period date.
          type: string
          format: date
        endDate:
          description: End Date - end of period date.
          type: string
          format: date
        instructedInformation:
          description: Additional instructed information unstructured.
          type: string
          maxLength: 70
      required:
        - paymentCategory
        - itemAmount
        - instructedInformation

    BGSebraPaymentInformation:
      description: BGN SEBRA transfers remittance information.
      type: object
      required:
        - structureType
        - paymentCategory
      properties:
        structureType:
          type: string
          description: Discriminator value. Must be equal to 'BG_SEBRA_PAYMENT'.
          enum:
            - BG_SEBRA_PAYMENT
          example: 'BG_SEBRA_PAYMENT'
        paymentCategory:
          $ref: "#/components/schemas/BGPaymentCategory"
        debtorPaymentCategory:
          $ref: "#/components/schemas/BGPaymentCategory"
        regulatoryReportType:
          $ref: "#/components/schemas/BGRegulatoryReportType"
        documentNumber:
          $ref: "#/components/schemas/BGBudgetDocumentNumber"
        documentDate:
          description: Document Date issued by Government authority
          type: string
          format: date
        fromDate:
          description: From Date - start of period date.
          type: string
          format: date
        endDate:
          description: End Date - end of period date.
          type: string
          format: date
        activityCode:
          description: The code of activity of the payer's payment reason.
          type: string
          minLength: 1
          maxLength: 4

    BGPaymentCategory:
      description: Budget payment type - according BNB nomenclature.
      type: string
      pattern: '^\d{6}$|^\d{2}$'

    BGBudgetDocumentNumber:
      description: The number of the document.
      type: string
      pattern: '^.{0,17}$'

    BGRegulatoryReportType:
      description: The type of the document.
      type: string
      pattern: '^[1-69]$'

    BGTaxPayerId:
      description: Bulstat/EGN/ENC(LNC) of the obliged party.
      type: string
      minLength: 9
      maxLength: 13

    BGTaxPayerName:
      description: The name of the obliged party.
      type: string
      minLength: 1
      maxLength: 35

    BGTaxPayerType:
      description: The tax type code of the obliged party.
      example: 'EGN'
      type: string
      enum:
        - 'EGN'
        - 'EIK'
        - 'PNF'



    #RgltryRptg
    RegulatoryReporting:
      type: object
      properties:
        reportingType:
          $ref: '#/components/schemas/RegulatoryReportingType'
          #<DbtCdtRptgInd>
        authority:
          $ref: '#/components/schemas/RegulatoryReportingAuthority'
          #<Authrty>
        details:
          type: array
          #<Dtls>
          items:
            $ref: '#/components/schemas/RegulatoryReportingData'

    RegulatoryReportingType:
      type: string
      enum:
        - CRED
        - DEBT
        - BOTH

    RegulatoryReportingAuthority:
      type: object
      properties:
        name:
          type: string
          example: 'Authority'
          minLength: 1
          maxLength: 140
        country:
          $ref: '#/components/schemas/Country'


    RegulatoryReportingData:
      type: object
      properties:
        type:
          type: string
          minLength: 1
          maxLength: 35
          #<Tp>
        date:
          type: string
          format: date
          example: '2019-09-01'
          #<Dt>
        country:
          $ref: '#/components/schemas/Country'
        code:
          type: string
          minLength: 1
          maxLength: 10
          #<Cd>
        amount:
          $ref: '#/components/schemas/Amount'
          #<Amt>
        information:
          type: array
          #<Inf>
          items:
            type: string
            minLength: 1
            maxLength: 35


    XKReferenceInformation:
      type: object
      required:
        - structureType
      properties:
        structureType:
          type: string
          description: Discriminator value. Must be equal to 'XK_REFERENCE'.
          enum:
            - XK_REFERENCE
          example: 'XK_REFERENCE'
        referenceOrGiroID:
          type: string
          description: Country specific field for KX.
          maxLength: 16

    RSInternationalReferenceInformation:
      type: object
      required:
        - structureType
      properties:
        structureType:
          type: string
          description: Discriminator value. Must be equal to 'RS_INTERNATIONAL_REFERENCE'.
          enum:
            - RS_INTERNATIONAL_REFERENCE
          example: 'RS_INTERNATIONAL_REFERENCE'
        statisticalData:
          type: array
          items:
            $ref: '#/components/schemas/RSStatisticalData'
        loanNumber:
          type: string
          maxLength: 6
          pattern: '^[0-9]{0,6}$'
        loanYear:
          type: string
          maxLength: 4
          pattern: '^[0-9]{0,4}$'
        specialCode:
          type: string
          maxLength: 1
          pattern: '^[0-7]{0,1}$'
        coverCurrency:
          type: string
          maxLength: 3


    RSDomesticReferenceInformation:
      type: object
      required:
        - structureType
      properties:
        structureType:
          type: string
          description: Discriminator value. Must be equal to 'RS_DOMESTIC_REFERENCE'.
          enum:
            - RS_DOMESTIC_REFERENCE
          example: 'RS_DOMESTIC_REFERENCE'
        purposeCode:
          type: string
          maxLength: 3
          pattern: '^[0-9]{0,3}$'
        creditModelAndReferenceNumber:
          type: string
          maxLength: 23
        debitModelAndReferenceNumber:
          type: string
          maxLength: 23

    # Statistical Data for RS
    RSStatisticalData:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        purposeCode:
          type: string
          maxLength: 3
          pattern: '^[0-9]{0,3}$'
        invoiceProformaNumber:
          type: string
          maxLength: 30
        invoiceProformaYear:
          type: string
          maxLength: 4
          pattern: '^[0-9]{0,4}$'
        description:
          type: string
          maxLength: 35

    PaymentId:
      description: |
        Resource identification of the generated payment initiation resource.
      example: '1234-wertiq-983'
      type: string
      minLength: 1
      maxLength: 35

    PaymentStatus:
      title: transactionStatus
      example: 'ACCP'
      x-enum-elements:
        - name: ACCC
          description: 'AcceptedSettlementCompleted - Money Credited'
        - name: ACCP
          description: 'AcceptedCustomerProfile'
        - name: ACSC
          description: 'AcceptedSettlementCompleted'
        - name: ACSP
          description: 'AcceptedSettlementInProgress'
        - name: ACTC
          description: 'AcceptedTechnicalValidation'
        - name: ACWC
          description: 'AcceptedWithChange'
        - name: ACWP
          description: 'AcceptedWithoutPosting'
        - name: RCVD
          description: 'Received'
        - name: PDNG
          description: 'Pending'
        - name: PATC
          description: 'PartiallyAcceptedTechnical'
        - name: RJCT
          description: 'Rejected'
        - name: CANC
          description: 'Cancelled'
      type: string
      enum:
        - ACCC
        - ACCP
        - ACSC
        - ACSP
        - ACTC
        - ACWC
        - ACWP
        - RCVD
        - PDNG
        - PATC
        - RJCT
        - CANC

    BulkInitiationResponse:
      type: object
      properties:
        bulkPaymentId:
          $ref: '#/components/schemas/PaymentId'
        status:
          $ref: '#/components/schemas/PaymentStatus'
      required:
        - status

    BulkStatusReport:
      type: object
      properties:
        groupHeader:
          $ref: '#/components/schemas/StatusGroupHeader'
        originalGroupInfo:
          $ref: '#/components/schemas/OriginalGroupInfo'
        originalPaymentInfos:
          type: array
          items:
            $ref: '#/components/schemas/OriginalPaymentInfo'
      required:
        - groupHeader

    StatusGroupHeader:
      description: |
        Total set of information shared by all transactions included in the message.
      properties:
        messageId:
          $ref: '#/components/schemas/UniqueIdentification'
        creationDateTime:
          description: Date and time at which the message was created.
          type: string
          example: '2019-09-21T17:32:28Z'
          format: date-time
          #<GrpHdr><CreDtTm>
        initiatingParty:
          $ref: '#/components/schemas/InitiatingParty'
          #<GrpHdr><InitgPty>
        debtorAgent:
          $ref: '#/components/schemas/AccountAgent'
          #<DbtrAgt>
        creditorAgent:
          $ref: '#/components/schemas/AccountAgent'
      required:
        - messageId
        - creationDateTime
        - initiatingParty
        - debtorAgent
        - creditorAgent

    OriginalGroupInfo:
      description: |
        Total set of information shared by all transactions included in the message.
      properties:
        messageId:
          $ref: '#/components/schemas/UniqueIdentification'
        messageNameId:
          $ref: '#/components/schemas/UniqueIdentification'
        creationDateTime:
          description: Date and time at which the message was created.
          type: string
          example: '2019-09-21T17:32:28Z'
          format: date-time
          #<GrpHdr><CreDtTm>
        controlSum:
          example: '42.13'
          description: Total amount of all individual transaction amounts in the batch. Passed as string to avoid conversion errors (recommended in whitepaper).
          type: string
          minLength: 1
          maxLength: 15
          #format: decimal
          #passed as string to avoid conversion errors (recommended in whitepaper)
          #arbitrary length chosen similar to other string fields
          #<GrpHdr><CtrlSum>
        numberOfTransactions:
          type: integer
          format: int64
          example: 1
          description: Total number of individual transactions contained in the batch.
          minLength: 1
          maxLength: 15
        status:
          $ref: '#/components/schemas/PaymentStatus'
        statusReasonInformations:
          type: array
          items:
            $ref: '#/components/schemas/StatusReasonInformation'
        transactionsPerStatus:
          type: array
          items:
            $ref: '#/components/schemas/TransactionsPerStatus'
      required:
        - messageId
        - creationDateTime
        - controlSum
        - numberOfTransactions
        - status

    OriginalPaymentInfo:
      description: |
        Total set of information shared by all transactions included in the message.
      properties:
        paymentInformationId:
          $ref: '#/components/schemas/UniqueIdentification'
        controlSum:
          example: '42.13'
          description: Total amount of all individual transaction amounts in the batch. Passed as string to avoid conversion errors (recommended in whitepaper).
          type: string
          minLength: 1
          maxLength: 15
          #format: decimal
          #passed as string to avoid conversion errors (recommended in whitepaper)
          #arbitrary length chosen similar to other string fields
          #<GrpHdr><CtrlSum>
        numberOfTransactions:
          type: integer
          format: int64
          example: 1
          description: Total number of individual transactions contained in the batch.
          minLength: 1
          maxLength: 15
        status:
          $ref: '#/components/schemas/PaymentStatus'
        statusReasonInformations:
          type: array
          items:
            $ref: '#/components/schemas/StatusReasonInformation'
        transactionsPerStatus:
          type: array
          items:
            $ref: '#/components/schemas/TransactionsPerStatus'
        transactionsInfos:
          type: array
          items:
            $ref: '#/components/schemas/TransactionInfos'
      required:
        - paymentInformationId
        - controlSum
        - numberOfTransactions
        - status


    TransactionInfos:
      type: object
      properties:
        statusId:
          $ref: '#/components/schemas/UniqueIdentification'
        instructionId:
          $ref: '#/components/schemas/UniqueIdentification'
        endToEndId:
          $ref: '#/components/schemas/EndToEndIdentification'
        uuid:
          $ref: '#/components/schemas/UUID'
        status:
          $ref: '#/components/schemas/PaymentStatus'
        statusReasonInformations:
          type: array
          items:
            $ref: '#/components/schemas/StatusReasonInformation'
        chargesInfo:
          type: array
          items:
            $ref: '#/components/schemas/ChargesInfo'
        trackerData:
          type: array
          items:
            $ref: '#/components/schemas/TrackerData'
        acceptanceDateTime:
          $ref: '#/components/schemas/DateTimeSchema'
        accountServicerReference:
          $ref: '#/components/schemas/AccountServicerReference'
        clearingSystemReference:
          $ref: '#/components/schemas/ClearingSystemReference'
        orginalTransactionReference:
          $ref: '#/components/schemas/OrginalTransactionReference'


    OrginalTransactionReference:
      type: object
      properties:
        intermedientBankSettlementAmount:
          $ref: '#/components/schemas/Amount'
        amount:
          $ref: '#/components/schemas/Amount'
        intermediateBankSettlementDate:
          $ref: '#/components/schemas/DateSchema'
        requestedOrderCollectionDate:
          $ref: '#/components/schemas/DateSchema'
        requestedExecutionDate:
          $ref: '#/components/schemas/DateSchema'
        creditorSchemeId:
          $ref: '#/components/schemas/PartyIdentification'
        settlementIstruction:
          $ref: '#/components/schemas/SettlementIstruction'
        paymentTypeInformation:
          $ref: '#/components/schemas/PaymentTypeInformation'
        paymentMethod:
          $ref: '#/components/schemas/PaymentMethod'
        mandateRelatedInfo:
          type: object
          properties:
            directDebitMandate:
              $ref: '#/components/schemas/MandateInformation'
            creditTransferMandate:
              $ref: '#/components/schemas/CreditTransferMandateInformation'
        remmitanceInformation:
          $ref: '#/components/schemas/RemittanceInformation'
        ultimateDebtor:
          $ref: '#/components/schemas/PartyChoice'
        debtor:
          $ref: '#/components/schemas/PartyChoice'
        debtorAccount:
          $ref: '#/components/schemas/CashAccount'
        debtorAgent:
          $ref: '#/components/schemas/AccountAgent'
        debtorAgentAccount:
          $ref: '#/components/schemas/CashAccount'
        creditorAgent:
          $ref: '#/components/schemas/AccountAgent'
        creditorAgentAccount:
          $ref: '#/components/schemas/CashAccount'
        creditor:
          $ref: '#/components/schemas/PartyChoice'
        creditorAccount:
          $ref: '#/components/schemas/CashAccount'
        ultimateCreditor:
          $ref: '#/components/schemas/PartyChoice'

    SettlementIstruction:
      type: object
      properties:
        settlementMethod:
          $ref: '#/components/schemas/SettlementMethodCode'
        settlementAccount:
          $ref: '#/components/schemas/CashAccount'
        clearingSystemReference:
          $ref: '#/components/schemas/ClearingSystemReference'
        instructingReimbursementAgent:
          $ref: '#/components/schemas/AccountAgent'
        instructingReimbursementAgentAccount:
          $ref: '#/components/schemas/Account'
        instructedReimbursementAgent:
          $ref: '#/components/schemas/AccountAgent'
        instructedReimbursementAgentAccount:
          $ref: '#/components/schemas/Account'
        thirdReimbursementAgent:
          $ref: '#/components/schemas/AccountAgent'
        thirdReimbursementAgentAccount:
          $ref: '#/components/schemas/Account'


    TrackerData:
      type: object
      description: |
        TODO
      properties:
        confirmedDate:
          $ref: '#/components/schemas/DateTimeSchema'
        confirmedAmount:
          $ref: '#/components/schemas/Amount'
        trackerRecords:
          type: array
          items:
            $ref: '#/components/schemas/TrackerRecord'

    TrackerRecord:
      type: object
      properties:
        agent:
          $ref: '#/components/schemas/AccountAgent'
        chargeBearer:
          $ref: '#/components/schemas/ChargeBearer'
        chargesAmount:
          $ref: '#/components/schemas/Amount'
        exchangeRateData:
          $ref: '#/components/schemas/ExchangeRateData'

    ExchangeRateData:
      type: object
      properties:
        sourceCurrency:
          $ref: '#/components/schemas/Currency'
        targetCurrency:
          $ref: '#/components/schemas/Currency'
        unitCurrency:
          $ref: '#/components/schemas/Currency'
        exchangeRate:
          description: |
            The amount of exchange rate.
          type: number


    DateTimeSchema:
      description: Date and time at which the message was created.
      type: string
      example: '2019-09-21T17:32:28Z'
      format: date-time
      #<GrpHdr><CreDtTm>

    DateSchema:
      description: Date and time at which the message was created.
      type: string
      example: '2019-09-21'
      format: date
      #<GrpHdr><CreDtTm>

    SettlementMethodCode:
      type: string
      enum:
        - INDA
        - INGA
        - COVE
        - CLRG

    AccountServicerReference:
      type: string
      example: 'MCCT1306251365420971215'
      minLength: 1
      maxLength: 35


    ClearingSystemReference:
      type: string
      example: 'MCCT1306251365420971215'
      minLength: 1
      maxLength: 35

    PrivateIdentification:
      type: object
      properties:
        birthDate:
          type: string
          format: date
          example: '2019-09-21'
          #<PmtInf><Dbtr><Id><PrvtId><DtAndPlcOfBirth><BirthDt>
        provinceOfBirth:
          type: string
          minLength: 1
          maxLength: 35
          example: 'Vienna'
          #<PmtInf><Dbtr><Id><PrvtId><DtAndPlcOfBirth><PrvcOfBirth>
        cityOfBirth:
          type: string
          minLength: 1
          maxLength: 35
          example: 'Vienna'
          #<PmtInf><Dbtr><Id><PrvtId><DtAndPlcOfBirth><CityOfBirth>
        countryOfBirth:
          type: string
          minLength: 1
          maxLength: 2
          example: 'AT'
          #<PmtInf><Dbtr><Id><PrvtId><DtAndPlcOfBirth><CtryOfBirth>
        otherIdentification:
          $ref: '#/components/schemas/OtherIdentification'
          #<PmtInf><Dbtr><Id><PrvtId><Othr>

    UniqueIdentification:
      type: string
      description: Identification for each single transaction status change.
      example: 'MCCT1306251365420971215'
      minLength: 1
      maxLength: 35

    ChargesInfo:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        agent:
          $ref: '#/components/schemas/AccountAgent'

    StatusReasonInformation:
      type: object
      properties:
        organization:
          $ref: '#/components/schemas/PartyIdentification'
        reason:
          type: string
          maxLength: 35
        additionalInformation:
          type: string
          maxLength: 105

    TransactionsPerStatus:
      type: object
      properties:
        controlSum:
          example: '42.13'
          description: Total amount of all individual transaction amounts in the batch. Passed as string to avoid  errors (recommended in whitepaper).
          type: string
          minLength: 1
          maxLength: 15
          #format: decimal
          #passed as string to avoid conversion errors (recommended in whitepaper)
          #arbitrary length chosen similar to other string fields
          #<GrpHdr><CtrlSum>
        numberOfTransactions:
          type: integer
          format: int64
          example: 1
          description: Total number of individual transactions contained in the batch.
          minLength: 1
          maxLength: 15
        status:
          $ref: '#/components/schemas/PaymentStatus'

    Currency:
      example: 'EUR'
      description: The amount currency
      type: string
      pattern: '^[A-Z]{3,3}$'

    EndToEndIdentification:
      description: |
        Unique identification, as assigned by the initiating party, to unambiguously identify the transaction.
        This identification is passed on, unchanged, throughout the entire end-to-end chain.
      #<PmtId><EndToEndId>
      example: 'E2EC130625000009'
      type: string
      minLength: 1
      maxLength: 35

    UUID:
      type: string
      pattern: '[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}'

    Error:
      type: object
      properties:
        id:
          type: string
          description: Unique UUID for audit purposes.
        code:
          type: string
          description: Optional error code for reporting purposes.
        description:
          type: string
          description: The description of the error.


    pain.001: #The same schemas are use for single an bulk payment in case of a pain.001
      description: |
        A pain.001 structure corresponding to the credit transfer schema

        urn:iso:std:iso:20022:tech:xsd:pain.001.001.03
      type: string
      example:
        <Document xmlns="urn:iso:std:iso:20022:tech:xsd:pain.001.001.03">
        <CstmrCdtTrfInitn>
        <GrpHdr>
        <MsgId>MIPI-123456789RI-123456789</MsgId>
        <CreDtTm>2017-02-14T20:23:34.000Z</CreDtTm>
        <NbOfTxs>1</NbOfTxs>
        <CtrlSum>123</CtrlSum>
        <InitgPty>
        <Nm>PaymentInitiator</Nm>
        <Id><OrgId><Othr><Id>DE10000000012</Id>
        <SchmeNm><Prptry>PISP</Prptry></SchmeNm></Othr></OrgId></Id>
        </InitgPty>
        </GrpHdr>
        <PmtInf>
        <PmtInfId>BIPI-123456789RI-123456789</PmtInfId>
        <PmtMtd>TRF</PmtMtd>
        <NbOfTxs>1</NbOfTxs>
        <CtrlSum>123</CtrlSum>
        <PmtTpInf><SvcLvl><Cd>SEPA</Cd></SvcLvl></PmtTpInf>
        <ReqdExctnDt>2017-02-15</ReqdExctnDt>
        <Dbtr><Nm>PSU Name</Nm></Dbtr>
        <DbtrAcct><Id><IBAN>DE87200500001234567890</IBAN></Id></DbtrAcct>
        <ChrgBr>SLEV</ChrgBr>
        <CdtTrfTxInf>
        <PmtId><EndToEndId>RI-123456789</EndToEndId></PmtId>
        <Amt><InstdAmt Ccy="EUR">123</InstdAmt></Amt>
        <Cdtr><Nm>Merchant123</Nm></Cdtr>
        <CdtrAcct><Id><IBAN> DE23100120020123456789</IBAN></Id></CdtrAcct>
        <RmtInf><Ustrd>Ref Number Merchant-123456</Ustrd></RmtInf>
        </CdtTrfTxInf>
        </PmtInf>
        </CstmrCdtTrfInitn>
        </Document>
    pain.008: #The same schemas are use for single an bulk payment in case of a pain.001
      description: |
        A pain.008 structure corresponding to the debit transfer schema

        urn:iso:std:iso:20022:tech:xsd:pain.008.001.11
      type: string
      example:
        <Document xmlns="urn:iso:std:iso:20022:tech:xsd:pain.008.001.02" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <CstmrDrctDbtInitn>
        <GrpHdr>
        <MsgId>Message 9 200131106</MsgId>
        <CreDtTm>2013-10-08T12:57:52</CreDtTm>
        <NbOfTxs>2</NbOfTxs>
        <CtrlSum>0.30</CtrlSum>
        <InitgPty>
        <Nm>PILOTFORETAG B</Nm>
        <Id>
        <OrgId>
        <Othr>
        <Id>3321251633</Id>
        <SchmeNm>
        <Cd>BANK</Cd>
        </SchmeNm>
        </Othr>
        </OrgId>
        </Id>
        </InitgPty>
        </GrpHdr>
        <PmtInf>
        <PmtInfId>SEND PAYMENT VER 009</PmtInfId>
        <PmtMtd>DD</PmtMtd>
        <BtchBookg>true</BtchBookg>
        <NbOfTxs>2</NbOfTxs>
        <CtrlSum>0.30</CtrlSum>
        <PmtTpInf>
        <SvcLvl>
        <Cd>SEPA</Cd>
        </SvcLvl>
        <LclInstrm>
        <Cd>B2B</Cd>
        </LclInstrm>
        <SeqTp>RCUR</SeqTp>
        </PmtTpInf>
        <ReqdColltnDt>2013-11-08</ReqdColltnDt>
        <Cdtr>
        <Nm>PILOTFORETAG B</Nm>
        <PstlAdr>
        <Ctry>DE</Ctry>
        </PstlAdr>
        </Cdtr>
        <CdtrAcct>
        <Id>
        <IBAN>NL58HAND0718128982</IBAN>
        </Id>
        </CdtrAcct>
        <CdtrAgt>
        <FinInstnId>
        <BIC>HANDNL2A</BIC>
        </FinInstnId>
        </CdtrAgt>
        <CdtrSchmeId>
        <Id>
        <PrvtId>
        <Othr>
        <Id>SE92ZZZ3321251633</Id>
        <SchmeNm>
        <Prtry>SEPA</Prtry>
        </SchmeNm>
        </Othr>
        </PrvtId>
        </Id>
        </CdtrSchmeId>
        <DrctDbtTxInf>
        <PmtId>
        <EndToEndId>BMO1 SEND PROD VER 10 1106</EndToEndId>
        </PmtId>
        <InstdAmt Ccy="EUR">0.20</InstdAmt>
        <ChrgBr>SLEV</ChrgBr>
        <DrctDbtTx>
        <MndtRltdInf>
        <MndtId>PRODVER8</MndtId>
        <DtOfSgntr>2011-10-01</DtOfSgntr>
        </MndtRltdInf>
        </DrctDbtTx>
        <DbtrAgt>
        <FinInstnId>
        <BIC>HANDDEFF</BIC>
        </FinInstnId>
        </DbtrAgt>
        <Dbtr>
        <Nm>Pilot B</Nm>
        <PstlAdr>
        <Ctry>NL</Ctry>
        </PstlAdr>
        <Id>
        <OrgId>
        <Othr>
        <Id>3321251633</Id>
        <SchmeNm>
        <Cd>CUST</Cd>
        </SchmeNm>
        </Othr>
        </OrgId>
        </Id>
        </Dbtr>
        <DbtrAcct>
        <Id>
        <IBAN>DE50514206000011350044</IBAN>
        </Id>
        </DbtrAcct>
        <RmtInf>
        <Ustrd>Invoice 1</Ustrd>
        </RmtInf>
        </DrctDbtTxInf>
        <DrctDbtTxInf>
        <PmtId>
        <EndToEndId>BMO2 SEND PROD VER 11 1106</EndToEndId>
        </PmtId>
        <InstdAmt Ccy="EUR">0.10</InstdAmt>
        <ChrgBr>SLEV</ChrgBr>
        <DrctDbtTx>
        <MndtRltdInf>
        <MndtId>PRODVER9</MndtId>
        <DtOfSgntr>2011-10-01</DtOfSgntr>
        </MndtRltdInf>
        </DrctDbtTx>
        <DbtrAgt>
        <FinInstnId>
        <BIC>HANDDEFF</BIC>
        </FinInstnId>
        </DbtrAgt>
        <Dbtr>
        <Nm>PILOT B</Nm>
        <PstlAdr>
        <Ctry>DE</Ctry>
        </PstlAdr>
        <Id>
        <OrgId>
        <Othr>
        <Id>5567578793</Id>
        <SchmeNm>
        <Cd>CUST</Cd>
        </SchmeNm>
        </Othr>
        </OrgId>
        </Id>
        </Dbtr>
        <DbtrAcct>
        <Id>
        <IBAN>DE84514206000011350014</IBAN>
        </Id>
        </DbtrAcct>
        <RmtInf>
        <Ustrd>Invoice 2</Ustrd>
        </RmtInf>
        </DrctDbtTxInf>
        </PmtInf>
        </CstmrDrctDbtInitn>
        </Document>
    pain.002:
      description: |
        A pain.002 structure corresponding to the Payment Status Report.

        urn:iso:std:iso:20022:tech:xsd:pain.002.001.11
      type: string
      example:
        <Document>
        <CstmrPmtStsRpt>
        <GrpHdr>
        <MsgId>13110616213300101</MsgId>
        <CreDtTm>2013-11-06T16:21:33</CreDtTm>
        <InitgPty>
        <Id>
        <OrgId>
        <BICOrBEI>HANDSESS</BICOrBEI>
        </OrgId>
        </Id>
        </InitgPty>
        </GrpHdr>
        <OrgnlGrpInfAndSts>
        <OrgnlMsgId>Message 9 200131106</OrgnlMsgId>
        <OrgnlMsgNmId>pain.008.001.02</OrgnlMsgNmId>
        <OrgnlCreDtTm>2013-10-08T12:57:52</OrgnlCreDtTm>
        <GrpSts>ACCP</GrpSts>
        </OrgnlGrpInfAndSts>
        </CstmrPmtStsRpt>
        </Document>

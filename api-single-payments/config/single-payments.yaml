openapi: 3.0.1

info:
  title: Payments
  version: 0.6.1
  description: |
    # Single Payments API

    This API is used to initiate, submit and get summary of single payment.
    Payment products allowed in this api:
    * Domestic credit transfer
    * Foreign credit transfer
    * Sepa credit transfer

    All products are represented as separate entities

    out of scope in this version
    ====
    - target error responses
    - redirection for Cancel calls (SCA) workflow
  contact:
    name: Realtime Integration Center of Excellence

tags:
  - name: Single Payment Orders
    description: Group Payment API for single payment orders.
  - name: Standing Payment Orders
    description: Group Payment API for standing payment orders.
paths:
  /api/v1/single-credit-transfers:
    get:
      description: |
        Get list of credit transfers matching query parameters. The list contains only payments with debit account
        for which the requesting party presented in access token as allowed to initiate or authorize payment.
      security:
        - openId:
            - customer
            - employee
            - third-party-customer
            - m2m
      operationId: getSingleCreditTrasfers
      tags:
        - Single Payment Orders
      parameters:
        - $ref: '#/components/parameters/OffsetPaginationLimit'
        - $ref: '#/components/parameters/OffsetPaginationOffset'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/X-Correlation-ID'
        - $ref: '#/components/parameters/ExternalPaymentIdFilter'
        - $ref: '#/components/parameters/DateFromFilter'
        - $ref: '#/components/parameters/PaymentTypeFilter'
        - $ref: '#/components/parameters/IncludeRejectedFilter'
        - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          $ref: '#/components/responses/GetSingleCreditTransfersListResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
    post:
      description: |
        The method to initiate a single credit transfer. In order to initiate specific payment (domestic, sepa or foreign)
        paymentType must be selected and set of payment type specific attributes filled.
      security:
        - openId:
            - customer
            - employee
            - third-party-customer
            - m2m
      operationId: initateSinglePayment
      tags:
        - Single Payment Orders
      parameters:
        - $ref: "#/components/parameters/X-Request-ID"
        - $ref: "#/components/parameters/X-Correlation-ID"
        - $ref: "#/components/parameters/X-Idempotency-Key"
      requestBody:
        $ref: '#/components/requestBodies/PostSingleCreditTransferRequest'
      responses:
        "201":
          $ref: '#/components/responses/PostSingleCreditTransferResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /api/v1/single-credit-transfers/calculate-fee:
    post:
      description: The method to calculate fees for single credit transfer.
      security:
        - openId:
            - customer
            - employee
            - third-party-customer
            - m2m
      operationId: calculateFeeSinglePayment
      tags:
        - Single Payment Orders
      parameters:
        - $ref: "#/components/parameters/X-Request-ID"
        - $ref: "#/components/parameters/X-Correlation-ID"
        - $ref: "#/components/parameters/X-Idempotency-Key"
      requestBody:
        $ref: '#/components/requestBodies/CalculateFeeSingleCreditTransferRequest'
      responses:
        "200":
          $ref: '#/components/responses/CalculateFeeSingleCreditTransferResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'


  /api/v1/single-credit-transfers/{paymentId}:
    get:
      description: Gets summary of the specifed credit transfer.
      security:
        - openId:
            - customer
            - employee
            - third-party-customer
            - m2m
      operationId: getSingleCreditTransfer
      tags:
        - Single Payment Orders
      parameters:
        - $ref: "#/components/parameters/X-Request-ID"
        - $ref: "#/components/parameters/X-Correlation-ID"
        - $ref: "#/components/parameters/PaymentId"
      responses:
        "200":
          $ref: '#/components/responses/GetSingleCreditTransferResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
    delete:
      summary: Delete credit transfer
      description: Delete pending credit transfer.
      security:
        - openId:
            - payment-deletion
      operationId: deleteSingleCreditTransfer
      tags:
        - Single Payment Orders
      parameters:
        - $ref: "#/components/parameters/X-Request-ID"
        - $ref: "#/components/parameters/X-Correlation-ID"
        - $ref: "#/components/parameters/PaymentId"
      responses:
        "200":
          description: Delete credit transfer request done.
        "202":
          description: Delete credit transfer request accepted.
        default:
          $ref: '#/components/responses/ErrorResponse'

  /api/v1/single-credit-transfers/{paymentId}/submit:
    post:
      description: This method is used to submit a specific payment.
      security:
        - openId:
            - payment-submission
      operationId: submitSingleCreditTransfer
      tags:
        - Single Payment Orders
      parameters:
        - $ref: "#/components/parameters/X-Request-ID"
        - $ref: "#/components/parameters/X-Correlation-ID"
        - $ref: "#/components/parameters/X-Idempotency-Key"
        - $ref: "#/components/parameters/PaymentId"
      requestBody:
        $ref: '#/components/requestBodies/PostSubmitSingleCreditTransferRequest'
      responses:
        "202":
          description: Payment execution submitted.
        default:
          $ref: '#/components/responses/ErrorResponse'


  /api/v1/standing-credit-transfers:
    get:
      description: |
        Get list of standing credit transfers matching query parameters. The list contains only payments with debit account
        for which the requesting party presented in access token as allowed to initiate or authorize payment.
      security:
        - openId:
            - customer
            - employee
            - third-party-customer
            - m2m
      operationId: getStandingCreditTrasfers
      tags:
        - Standing Payment Orders
      parameters:
        - $ref: '#/components/parameters/OffsetPaginationLimit'
        - $ref: '#/components/parameters/OffsetPaginationOffset'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/X-Correlation-ID'
        - $ref: '#/components/parameters/ExternalPaymentIdFilter'
        - $ref: '#/components/parameters/DateFromFilter'
        - $ref: '#/components/parameters/PaymentTypeFilter'
        - $ref: '#/components/parameters/IncludeRejectedFilter'
        - $ref: '#/components/parameters/Sort'
      responses:
        "200":
          $ref: '#/components/responses/GetStandingCreditTransfersListResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
    post:
      description: |
        The method to initiate a standing credit transfer. In order to initiate specific payment (domestic, sepa or foreing) paymentType must be selected and set of payment type specific attributes filled.
      security:
        - openId:
            - customer
            - employee
            - third-party-customer
            - m2m
      operationId: initiateStandingCreditTransfer
      tags:
        - Standing Payment Orders
      parameters:
        - $ref: "#/components/parameters/X-Request-ID"
        - $ref: "#/components/parameters/X-Correlation-ID"
        - $ref: "#/components/parameters/X-Idempotency-Key"
      requestBody:
        $ref: '#/components/requestBodies/PostStandingCreditTransferRequest'
      responses:
        "201":
          $ref: '#/components/responses/PostStandingCreditTransferResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /api/v1/standing-credit-transfers/{paymentId}:
    get:
      description: Gets summary of the specified credit transfer.
      security:
        - openId:
            - customer
            - employee
            - third-party-customer
            - m2m
      operationId: getStandingCreditTransfer
      tags:
        - Standing Payment Orders
      parameters:
        - $ref: "#/components/parameters/X-Request-ID"
        - $ref: "#/components/parameters/X-Correlation-ID"
        - $ref: "#/components/parameters/PaymentId"
      responses:
        "200":
          $ref: '#/components/responses/GetStandingCreditTransferResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
    delete:
      summary: Delete standing credit transfer
      description: Delete standing pending credit transfer.
      security:
        - openId:
            - payment-deletion
      operationId: deleteStandingCreditTransfer
      tags:
        - Standing Payment Orders
      parameters:
        - $ref: "#/components/parameters/X-Request-ID"
        - $ref: "#/components/parameters/X-Correlation-ID"
        - $ref: "#/components/parameters/PaymentId"
      responses:
        "200":
          description: Delete credit transfer request done.
        "202":
          description: Delete credit transfer request accepted.
        default:
          $ref: '#/components/responses/ErrorResponse'

  /api/v1/standing-credit-transfers/{paymentId}/submit:
    post:
      description: This method is used to submit a specific payment.
      security:
        - openId:
            - payment-submission
      operationId: submitStandingCreditTransfer
      tags:
        - Standing Payment Orders
      parameters:
        - $ref: "#/components/parameters/X-Request-ID"
        - $ref: "#/components/parameters/X-Correlation-ID"
        - $ref: "#/components/parameters/X-Idempotency-Key"
        - $ref: "#/components/parameters/PaymentId"
      requestBody:
        $ref: '#/components/requestBodies/PostSubmitStandingCreditTransferRequest'
      responses:
        "202":
          description: Payment execution submitted.
        default:
          $ref: '#/components/responses/ErrorResponse'


components:
  securitySchemes:
    openId:
      type: openIdConnect
      openIdConnectUrl: /.well-known/openid-configuration
  parameters:
    PaymentId:
      name: paymentId
      in: path
      description: Unique Identification of the payment.
      required: true
      schema:
        type: string
        maxLength: 35

    X-Request-ID:
      name: X-Request-ID
      in: header
      description: ID of the request, unique to the call, as determined by the initiating party.
      required: true
      example: '99391c7e-ad88-49ec-a2ad-99ddcb1f7721'
      schema:
        type: string
        format: uuid
    X-Correlation-ID:
      name: X-Correlation-ID
      in: header
      description: X-Correlation-ID will be used to track requests through all involved services to be able to graph request flows, map how services contribute to response times, identify bottle necks, etc. The X-Correlation-ID must be propagated unchanged in any and all downstream service calls to other Newton Microservices as well as NWU services. Multiple calls from Newton services to NWU services will potentially have equal X-Correlation-ID values.
      required: true
      example: '99391c7e-ad88-49ec-a2ad-99ddcb1f7721'
      schema:
        type: string
        format: uuid
    X-Idempotency-Key:
      name: X-Idempotency-Key
      in: header
      description:  Unique request identifier to support idempotency.
      required: false
      example: e457b5a2e4d86bd1198ee56343ba864fe8b2
      schema:
        type: string
        maxLength: 40
    OffsetPaginationOffset:
      name: offset
      in: query
      description: The number of items to skip before starting to collect the result set.
      example: 20
      schema:
        type: integer
    OffsetPaginationLimit:
      name: limit
      in: query
      description: The numbers of items to return.
      example: 20
      schema:
        type: integer

    ExternalPaymentIdFilter:
      in: query
      name: externalPaymentId
      description: External payment identifier.
      schema:
        $ref: '#/components/schemas/ExternalPaymentId'
      required: false

    DateFromFilter:
      in: query
      name: dateFrom
      description: Payment intitiated from the date until now.
      schema:
        $ref: '#/components/schemas/Date'
      required: false

    PaymentTypeFilter:
      in: query
      name: paymentType
      description: Payment of listed type [DOMESTIC, SEPA, FOREIGN].
      schema:
        type: array
        items:
          type: string
          enum:
            - DOMESTIC
            - SEPA
            - FOREIGN
        minItems: 1
      style: form
      explode: false
      required: false

    IncludeRejectedFilter:
      in: query
      name: includeRejected
      description: Include rejected or cancelled payments.
      schema:
        type: boolean
      required: false

    Sort:
      in: query
      name: sort
      description: |
        Comma-separated list of fields to define the sort order. The default sorting direction is ascending.
        To indicate sorting direction, suffix :asc or :desc can be used  e.g. /single-credit-transfers?sort=requestedExecutionDate:desc.
      required: false
      schema:
        type: array
        items:
          type: string
          pattern: '^(requestedExecutionDate):(asc|desc)$'
        example: [ 'requestedExecutionDate:asc' ]
  requestBodies:
    PostSingleCreditTransferRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostSingleCreditTransferRequest'
          example:
            {
              "paymentType": "DOMESTIC",
              "externalPaymentId": "AT-9809-98876",
              "amount": {
                type: "INSTRUCTED",
                currency: "CAD",
                amount: 123.45
              },
              "creditorAccount":{
                "accountReferenceType": "PAN",
                "pan": "1234567898765432",
                "currency": "EUR"
              },
              "creditor" : {
                "name": "Merchant123",
                "address": {
                  "addressLine1": "Rue blue 89",
                  "addressLine2": "75000 Paris",
                  "country": "FR"
                }
              },
              "debtorAccount": {
                "accountReferenceType": "IBAN",
                "currency": "EUR",
                "iban": "FR7612345987650123456789014"
              },
              "requestedExecutionDate": "2018-05-05"
            }

    CalculateFeeSingleCreditTransferRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CalculateFeeSingleCreditTransferRequest'
          example:
            {
              "paymentType": "DOMESTIC",
              "externalPaymentId": "AT-9809-98876",
              "amount": {
                type: "INSTRUCTED",
                currency: "CAD",
                amount: 123.45
              },
              "creditorAccount":{
                "accountReferenceType": "PAN",
                "pan": "1234567898765432",
                "currency": "EUR"
              },
              "creditor" : {
                "name": "Merchant123",
                "address": {
                  "addressLine1": "Rue blue 89",
                  "addressLine2": "75000 Paris",
                  "country": "FR"
                }
              },
              "debtorAccount": {
                "accountReferenceType": "IBAN",
                "currency": "EUR",
                "iban": "FR7612345987650123456789014"
              },
              "priority": "HIGH",
              "requestedExecutionDate": "2018-05-05"
            }


    PostSubmitSingleCreditTransferRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubmitCreditTransfer'

    PostSubmitStandingCreditTransferRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubmitCreditTransfer'

    PostStandingCreditTransferRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostStandingCreditTransferRequest'
          example:
            {
              "paymentType": "DOMESTIC",
              "externalPaymentId": "AT-9809-98876",
              "amount": {
                type: "INSTRUCTED",
                currency: "CAD",
                amount: 123.45
              },
              "creditorAccount": {
                "accountReferenceType": "PAN",
                "pan": "1234567898765432",
                "currency": "EUR"
              },
              "creditor": {
                "name": "Merchant123",
                "address": {
                  "addressLine1": "Rue blue 89",
                  "addressLine2": "75000 Paris",
                  "country": "FR"
                }
              },
              "debtorAccount": {
                "accountReferenceType": "IBAN",
                "currency": "EUR",
                "iban": "FR7612345987650123456789014"
              },
              "frequency":"MONTHLY",
              "startDate":"2021-05-05",
              "endDate": "2022-05-05",
              "executionRule": "PRECEDING"
            }


  responses:
    PostSingleCreditTransferResponse:
      description: Response body with created credit transfer details.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostSingleCreditTransferResponse'

    CalculateFeeSingleCreditTransferResponse:
      description: Response body with calculated transaction fees.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CalculateFeeSingleCreditTransferResponse'

    GetSingleCreditTransfersListResponse:
      description: Successful response.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetSingleCreditTransfersListResponse'
      links:
        GetCreditTransfersListOffsetPaginationNextPage:
          $ref: '#/components/links/GetCreditTransfersListOffsetPaginationNextPage'
        GetCreditTransfersOffsetPaginationPreviousPage:
          $ref: '#/components/links/GetCreditTransfersListOffsetPaginationPreviousPage'
        GetCreditTransferDetails:
          $ref: '#/components/links/GetCreditTransferDetails'

    GetSingleCreditTransferResponse:
      description: Details of specific credit transfer.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SingleCreditTransfer'

    GetStandingCreditTransfersListResponse:
      description: Successful response.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetStandingCreditTransfersListResponse'
      links:
        GetCreditTransfersListOffsetPaginationNextPage:
          $ref: '#/components/links/GetCreditTransfersListOffsetPaginationNextPage'
        GetCreditTransfersListOffsetPaginationPreviousPage:
          $ref: '#/components/links/GetCreditTransfersListOffsetPaginationPreviousPage'
        GetCreditTransferDetails:
          $ref: '#/components/links/GetCreditTransferDetails'

    GetStandingCreditTransferResponse:
      description: Details of specific credit transfer.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StandingCreditTransfer'

    ErrorResponse:
      description: Unexpected Error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    PostStandingCreditTransferResponse:
      description: Response body with created credit transfer details.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostStandingCreditTransferResponse'

  schemas:

    DomesticCreditTransferInitiation:
      allOf:
        - $ref: '#/components/schemas/CreditTransferCommon'
        - type: object
          description: Domestic credit transfers initiation attributes.
          properties:
            serviceLevel:
              $ref: '#/components/schemas/DomesticServiceLevel'

    DomesticSingleCreditTransferInitiation:
      allOf:
        - type: object
          required:
            - paymentType
          properties:
            paymentType:
              type: string
              description: Indicates domestic transfer type.
              enum:
                - DOMESTIC
              example: 'DOMESTIC'
        - $ref: '#/components/schemas/DomesticCreditTransferInitiation'
        - $ref: '#/components/schemas/SinglePaymentOrderCommon'

    SepaSingleCreditTransferInitiation:
      allOf:
        - $ref: '#/components/schemas/SepaCreditTransferInitiation'
        - $ref: '#/components/schemas/SinglePaymentOrderCommon'

    ForeignSingleCreditTransferInitiation:
      allOf:
        - $ref: '#/components/schemas/ForeignCreditTransferInitiation'
        - $ref: '#/components/schemas/SinglePaymentOrderCommon'

    SinglePaymentOrderCommon:
      type: object
      description: Generic attributes of every single order.
      required:
        - requestedExecutionDate
      properties:
        requestedExecutionDate:
          $ref: "#/components/schemas/RequestedExecutionDate"


    DomesticStandingCreditTransferInitiation:
      allOf:
        - type: object
          required:
            - paymentType
          properties:
            paymentType:
              type: string
              description: Indicates domestic transfer type.
              enum:
                - DOMESTIC
              example: 'DOMESTIC'
        - $ref: '#/components/schemas/DomesticCreditTransferInitiation'
        - $ref: '#/components/schemas/StandingPaymentOrderCommon'

    SepaStandingCreditTransferInitiation:
      allOf:
        - $ref: '#/components/schemas/SepaCreditTransferInitiation'
        - $ref: '#/components/schemas/StandingPaymentOrderCommon'

    ForeignStandingCreditTransferInitiation:
      allOf:
        - $ref: '#/components/schemas/ForeignCreditTransferInitiation'
        - $ref: '#/components/schemas/StandingPaymentOrderCommon'

    StandingPaymentOrderCommon:
      type: object
      description: Generic attributes of every standing order.
      properties:
        frequency:
          type: string
          description: |
            The expected frequency of standing order execution.
            **DAILY** - frequency is daily
            **MONTHLY** - frequency is monthly
            **TWO_MONTHLY** - frequency is two-monthly (every two months)
            **QUARTERLY** - frequency is quarterly (every three months)
            **SEMI_ANNUAL** - frequency is semi-annual (every six months)
            **ANNUAL** - frequency is annual
          enum:
            - DAILY
            - MONTHLY
            - TWO_MONTHLY
            - QUARTERLY
            - SEMI_ANNUAL
            - ANNUAL
        numberOfPayments:
          type: integer
          format: int32
          description: |
            Number of the payments that will be made in completing this frequency sequence including any
            executed since the sequence start date.
        startDate:
          type: string
          format: date
          description: The date on which the first payment for a Standing Order schedule will be made.
        endDate:
          type: string
          format: date
          description: The date on which the final payment for a Standing Order schedule will be made.
        executionRule:
          type: string
          description: |
            Defines the behaviour when recurring payment dates falls on a weekend or bank holiday.
            **FOLLOWING** - payment is executed on following working day
            **PRECEDING** - payment is executed on preceding working day
          enum:
            - FOLLOWING
            - PRECEDING

    DomesticServiceLevel:
      description: Service level for domestic payment according to ISO 20022.
      type: string
      enum:
        - SDVA
      example: SDVA

    ForeignCreditTransferInitiation:
      allOf:
        - $ref: '#/components/schemas/CreditTransferCommon'
        - type: object
          description: This is the base for Foreign payment initiation.
          required:
            - paymentType
          properties:
            paymentType:
              type: string
              description: Indicates foreign (cross border) transfer type.
              enum:
                - FOREIGN
              example: 'FOREIGN'

            serviceLevel:
              $ref: '#/components/schemas/ForeignServiceLevel'

    ForeignServiceLevel:
      description: Service level for foreign payments according to ISO 20022.
      type: string
      enum:
        - SDVA
      example: SDVA



    SepaCreditTransferInitiation:
      allOf:
        - $ref: '#/components/schemas/CreditTransferCommon'
        - type: object
          description: Additional attrubites of SEPA credit transfer initiation.
          required:
            - paymentType
          properties:
            paymentType:
              type: string
              description: Indicates SEPA transfer type.
              enum:
                - SEPA
              example: 'SEPA'


    Amount:
      oneOf:
        - $ref: "#/components/schemas/InstructedAmount"
        - $ref: "#/components/schemas/EquivalentAmount"
      discriminator:
        propertyName: type
        mapping:
          INSTRUCTED: "#/components/schemas/InstructedAmount"
          EQUIVALENT: "#/components/schemas/EquivalentAmount"



    InstructedAmount:
      type: object
      description: |
        Amount of money to be moved between the debtor and creditor, before deduction of
        charges, expressed in the currency as ordered by the initiating party.
      properties:
        type:
          type: string
          description: Discriminator value. Must be equal to 'INSTRUCTED'.
          enum:
            - INSTRUCTED
          example: 'INSTRUCTED'
        amount:
          description: The amount given with fractional digits.
          type: number
          example: 123.45
        currency:
          $ref: "#/components/schemas/CurrencyCode"
      required:
        - type
        - currency
        - amount

    EquivalentAmount:
      type: object
      description: |
        Amount of money to be moved between the debtor and creditor, expressed in the currency of
        the debtor's account, and the currency in which the amount is to be moved.
      properties:
        type:
          type: string
          description: Discriminator value. Must be equal to 'EQUIVALENT'.
          enum:
            - EQUIVALENT
          example: 'EQUIVALENT'
        currencyOfTransfer:
          $ref: "#/components/schemas/CurrencyCode"
        amount:
          description: The amount given with fractional digits.
          type: number
          example: 123.45
      required:
        - type
        - currencyOfTransfer
        - amount



    SingleCreditTransfer:
      description: Details of specific credit transfer.
      oneOf:
        - $ref: '#/components/schemas/DomesticSingleCreditTransfer'
        - $ref: '#/components/schemas/ForeignSingleCreditTransfer'
        - $ref: '#/components/schemas/SepaSingleCreditTransfer'
      discriminator:
        propertyName: paymentType
        mapping:
          DOMESTIC: '#/components/schemas/DomesticSingleCreditTransfer'
          FOREIGN: '#/components/schemas/ForeignSingleCreditTransfer'
          SEPA: '#/components/schemas/SepaSingleCreditTransfer'

    StandingCreditTransfer:
      description: Details of specific credit transfer.
      oneOf:
        - $ref: '#/components/schemas/DomesticStandingCreditTransfer'
        - $ref: '#/components/schemas/ForeignStandingCreditTransfer'
        - $ref: '#/components/schemas/SepaStandingCreditTransfer'
      discriminator:
        propertyName: paymentType
        mapping:
          DOMESTIC: '#/components/schemas/DomesticStandingCreditTransfer'
          FOREIGN: '#/components/schemas/ForeignStandingCreditTransfer'
          SEPA: '#/components/schemas/SepaStandingCreditTransfer'

    ######## ACCOUNT IDENTIFICATION ########

    DebtorAccount:
      description: |
        Identification of debtor account used for specific transfer. Multiple identification schemas are aplicable but not all must be supported by specific NWU.
      oneOf:
        - $ref: "#/components/schemas/AccountReferenceIban"
        - $ref: "#/components/schemas/AccountReferenceBban"
        - $ref: "#/components/schemas/AccountReferencePan"
      discriminator:
        propertyName: accountReferenceType
        mapping:
          IBAN: "#/components/schemas/AccountReferenceIban"
          BBAN: "#/components/schemas/AccountReferenceBban"
          PAN: "#/components/schemas/AccountReferencePan"

    CreditorAccount:
      description: |
        Identification of creditor account used for specific transfer. Multiple identification schemas are aplicable but not all must be supported by specific NWU.
      oneOf:
        - $ref: "#/components/schemas/AccountReferenceIban"
        - $ref: "#/components/schemas/AccountReferenceBban"
        - $ref: "#/components/schemas/AccountReferencePan"
        - $ref: "#/components/schemas/AccountReferenceMsisdn"
        - $ref: "#/components/schemas/AccountReferenceEmail"
        - $ref: "#/components/schemas/AccountReferenceTaxId"
      discriminator:
        propertyName: accountReferenceType
        mapping:
          IBAN: "#/components/schemas/AccountReferenceIban"
          BBAN: "#/components/schemas/AccountReferenceBban"
          PAN: "#/components/schemas/AccountReferencePan"
          MSISDN: "#/components/schemas/AccountReferenceMsisdn"
          EMAIL: "#/components/schemas/AccountReferenceEmail"
          TAX_IDENTIFICATION: "#/components/schemas/AccountReferenceTaxId"

    UltimateDebtor:
      description: Ultimate party that owes an amount of
        money to the (ultimate) Creditor.
        The Ultimate Debtor is the party that owes the cash
        to the (Ultimate) Creditor, i.e. as a result of receipt of
        goods or services, gifts, charity payments and is the party
        which orders the payment. It may be equal to the account
        owner whose account will be debited by the Debtor Agent
        to make the payment (i.e. the Debtor), but it can also be
        different from the Debtor. This is usually the buyer. It
        should only be specified in case it is different from the
        Debtor.
      type: object
      properties:
        name:
          type: string
          description: Ultimate debtor name.
          maxLength: 70
        identification:
          $ref: '#/components/schemas/PartyId'


    UltimateCreditor:
      description: Ultimate party to which an amount of
        money is due. Party that is the ultimate beneficiary of the cash
        transfer. It may be equal to or different from the Creditor.
        This is usually the seller.
      type: object
      properties:
        name:
          type: string
          description: Ultimate creditor name.
          maxLength: 70
        identification:
          $ref: '#/components/schemas/PartyId'

    PartyId:
      type: object
      properties:
        id:
          type: string
          example:
            "8941272226"
        schemaCode:
          type: string
          example:
            "TXID"

    AccountReferenceType:
      type: object
      required:
        - accountReferenceType
      properties:
        accountReferenceType:
          type: string
          enum:
            - IBAN
            - BBAN
            - PAN
            - MSISDN
            - EMAIL
            - TAX_IDENTIFICATION

    AccountReferenceIban:
      allOf:
        - $ref: '#/components/schemas/AccountReferenceType'
        - type: object
          description: This data elements is used for payment accounts which have IBAN.
          required:
            - iban
            - currency
          properties:
            iban:
              $ref: '#/components/schemas/Iban'
            currency:
              $ref: '#/components/schemas/CurrencyCode'
      example:
        {
          "currency": "EUR",
          "iban": "AT611904300234573201",
          "accountReferenceType": "IBAN"
        }

    AccountReferenceBban:
      allOf:
        - $ref: '#/components/schemas/AccountReferenceType'
        - type: object
          description: This data elements is used for payment accounts which have no IBAN.
          required:
            - bban
            - currency
          properties:
            bban:
              $ref: '#/components/schemas/Bban'
            currency:
              $ref: '#/components/schemas/CurrencyCode'

    AccountReferencePan:
      allOf:
        - $ref: '#/components/schemas/AccountReferenceType'
        - type: object
          description: |
            Reference to an account by the Primary Account Number (PAN) of a card,
            can be tokenised by the ASPSP due to PCI DSS requirements.
          required:
            - pan
            - currency
          properties:
            pan:
              $ref: "#/components/schemas/Pan"
            currency:
              $ref: '#/components/schemas/CurrencyCode'

    AccountReferenceEmail:
      allOf:
        - $ref: '#/components/schemas/AccountReferenceType'
        - type: object
          description: Reference to an account by the customer email.
          required:
            - email
            - currency
          properties:
            email:
              $ref: '#/components/schemas/Email'
            currency:
              $ref: '#/components/schemas/CurrencyCode'

    AccountReferenceTaxId:
      allOf:
        - $ref: '#/components/schemas/AccountReferenceType'
        - type: object
          description: Reference to an account by the tax identification number.
          required:
            - taxId
            - currency
          properties:
            taxId:
              $ref: '#/components/schemas/TaxIdentification'
            currency:
              $ref: '#/components/schemas/CurrencyCode'

    AccountReferenceMsisdn:
      allOf:
        - $ref: '#/components/schemas/AccountReferenceType'
        - type: object
          description: An alias to access a payment account via a registered mobile phone number.
          required:
            - msisdn
            - currency
          properties:
            msisdn:
              $ref: '#/components/schemas/Msisdn'
            currency:
              $ref: '#/components/schemas/CurrencyCode'

    Creditor:
      type: object
      description: Definition of creditor.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 140
        address:
          $ref: '#/components/schemas/Address'

    Debtor:
      type: object
      description: Definition of creditor.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 140
        address:
          $ref: '#/components/schemas/Address'


    RequestedExecutionDate:
      description: |
        https://tools.ietf.org/html/rfc3339#section-5.6
        date time for the expected execution time.
      type: string
      format: date
      example: '2018-05-05'

    RemittanceInformationUnstructured:
      description: Unstructured remittance information.
      type: string
      maxLength: 140
      example: 'Ref Number Merchant'

    EndToEndIdentification:
      description: |
        Unique identification, as assigned by the initiating party, to unambiguously identify the transaction.
        This identification is passed on, unchanged, throughout the entire end-to-end chain.
      type: string
      maxLength: 35
      example: 'RI-123456789'


    Address:
      title: Address
      description: Definition of address in structured way.
      type: object
      properties:
        country:
          $ref: "#/components/schemas/CountryCode"
        addressLine1:
          type: string
          minLength: 1
          maxLength: 70
          example: 'Rue blue 89'
        addressLine2:
          type: string
          minLength: 1
          maxLength: 70
          example: '75000 Paris'
      required:
        - country
        - addressLine1
      example:
        {
          "addressLine1": "Rue blue 89",
          "addressLine2": "75000 Paris",
          "country": "FR"
        }

    PurposeCode:
      description: |
        It is an optional field to describe the purpose of the payment transaction.
        The list of possible values with description can be found in https://www.iso20022.org/catalogue-messages/additional-content-messages/external-code-sets ExternalPurpose1Code
      type: string
      minLength: 1
      maxLength: 4
      example: 'BKDF'


    CategoryPurposeCode:
      description: |
        Specifies the high level purpose of the instruction based on a set of pre-defined categories.
        The list of possible values with description can be found in https://www.iso20022.org/catalogue-messages/additional-content-messages/external-code-sets ExternalCategoryPurpose1Code
      type: string
      minLength: 1
      maxLength: 4
      example: 'LOAN'

    RemittanceInformationStructured:
      description: Structured remittance information.
      type: array
      items:
        $ref: "#/components/schemas/RemittanceInformationStructuredItem"

    RemittanceInformationStructuredItem:
      description: |
        Identification of debtor account used for specific transfer. Multiple identification schemas are aplicable but not all must be supported by specific NWU.
      oneOf:
        - $ref: "#/components/schemas/CreditorReferenceInformation"
        - $ref: '#/components/schemas/ReferredDocumentInformation'
        - $ref: "#/components/schemas/BGBudgetaryPaymentInformation"
        - $ref: "#/components/schemas/BGMultiLineBudgetaryPaymentInformation"
        - $ref: '#/components/schemas/BGSebraPaymentInformation'
      discriminator:
        propertyName: structureType
        mapping:
          CREDITOR_REFERENCE: "#/components/schemas/CreditorReferenceInformation"
          REFERRED_DOCUMENT: "#/components/schemas/ReferredDocumentInformation"
          BG_BUDGETARY_PAYMENT: "#/components/schemas/BGBudgetaryPaymentInformation"
          BG_BUDGETARY_MULTILINE_PAYMENT: "#/components/schemas/BGMultiLineBudgetaryPaymentInformation"
          BG_SEBRA_PAYMENT: "#/components/schemas/BGSebraPaymentInformation"

    CreditorReferenceInformation:
      description: Structured remittance information.
      type: object
      required:
        - reference
        - structureType
      properties:
        structureType:
          description: Structure type for creditor reference information.
          type: string
          enum:
            - CREDITOR_REFERENCE
        reference:
          type: string
          maxLength: 35
        referenceType:
          type: string
          maxLength: 35
        referenceIssuer:
          type: string
          maxLength: 35

    ReferredDocumentInformation:
      type: object
      required:
        - structureType
      properties:
        structureType:
          description: Structure type for creditor reference information.
          type: string
          enum:
            - REFERRED_DOCUMENT
        code:
          description: "Special Code"
          type: string
          minLength: 1
          maxLength: 35
          example: 'MSIN or CNFA etc'
        proprietary:
          description: "Proprietary"
          type: string
          minLength: 1
          maxLength: 35
          example: 'Proprietary'
        issuer:
          description: "referenceIssuer"
          type: string
          minLength: 1
          maxLength: 35
          example: 'referenceIssuer'
        number:
          description: "Loan Number"
          type: string
          minLength: 1
          maxLength: 35
          example: 'LON124546'
        relatedDate:
          type: string
          format: date
          example: '2019-09-21'


    BGBudgetaryPaymentInformation:
      type: object
      description: BGN budget transfers remittance information.
      required:
        - taxPayerName
        - taxPayerId
        - taxPayerType
        - structureType
      properties:
        structureType:
          description: Structure type for creditor reference information.
          type: string
          enum:
            - BG_BUDGETARY_PAYMENT
        regulatoryReportType:
          $ref: "#/components/schemas/BGRegulatoryReportType"
        documentNumber:
          $ref: "#/components/schemas/BGBudgetDocumentNumber"
        documentDate:
          description: Document Date issued by Government authority.
          type: string
          format: date
        taxPayerId:
          $ref: "#/components/schemas/BGTaxPayerId"
        taxPayerType:
          $ref: "#/components/schemas/BGTaxPayerType"
        taxPayerName:
          $ref: "#/components/schemas/BGTaxPayerName"
        paymentCategory:
          $ref: "#/components/schemas/BGPaymentCategory"
        debtorPaymentCategory:
          $ref: "#/components/schemas/BGPaymentCategory"
        fromDate:
          description: From Date - start of period date.
          type: string
          format: date
        endDate:
          description: End Date - end of period date.
          type: string
          format: date

    BGMultiLineBudgetaryPaymentInformation:
      type: object
      description: BGN multi-line budget transfers remittance information.
      required:
        - taxPayerName
        - taxPayerId
        - taxPayerType
        - multiLineBudgetDetails
        - structureType
      properties:
        structureType:
          description: Structure type for creditor reference information.
          type: string
          enum:
            - BG_BUDGETARY_MULTILINE_PAYMENT
        taxPayerId:
          $ref: "#/components/schemas/BGTaxPayerId"
        taxPayerType:
          $ref: "#/components/schemas/BGTaxPayerType"
        taxPayerName:
          $ref: "#/components/schemas/BGTaxPayerName"
        debtorPaymentCategory:
          $ref: "#/components/schemas/BGPaymentCategory"
        multiLineDetails:
          type: array
          items:
            $ref: "#/components/schemas/BGBudgetaryPaymentDetailsItem"
          minItems: 1
          maxItems: 4

    BGBudgetaryPaymentDetailsItem:
      type: object
      description: Details item for budget payments.
      properties:
        paymentCategory:
          $ref: "#/components/schemas/BGPaymentCategory"
        itemAmount:
          $ref: "#/components/schemas/InstructedAmount"
        regulatoryReportType:
          $ref: "#/components/schemas/BGRegulatoryReportType"
        documentNumber:
          $ref: "#/components/schemas/BGBudgetDocumentNumber"
        documentDate:
          description: Document Date issued by Government authority.
          type: string
          format: date
        fromDate:
          description: From Date - start of period date.
          type: string
          format: date
        endDate:
          description: End Date - end of period date.
          type: string
          format: date
        instructedInformation:
          description: Additional instructed information unstructured.
          type: string
          maxLength: 70
      required:
        - paymentCategory
        - itemAmount
        - instructedInformation

    BGSebraPaymentInformation:
      description: BGN SEBRA transfers remittance information.
      type: object
      required:
        - paymentCategory
        - structureType
      properties:
        structureType:
          description: Structure type for creditor reference information.
          type: string
          enum:
            - BG_SEBRA_PAYMENT
        paymentCategory:
          $ref: "#/components/schemas/BGPaymentCategory"
        debtorPaymentCategory:
          $ref: "#/components/schemas/BGPaymentCategory"
        regulatoryReportType:
          $ref: "#/components/schemas/BGRegulatoryReportType"
        documentNumber:
          $ref: "#/components/schemas/BGBudgetDocumentNumber"
        documentDate:
          description: Document Date issued by Government authority.
          type: string
          format: date
        fromDate:
          description: From Date - start of period date.
          type: string
          format: date
        endDate:
          description: End Date - end of period date.
          type: string
          format: date
        activityCode:
          description: The code of activity of the payer's payment reason.
          type: string
          minLength: 1
          maxLength: 4

    BGPaymentCategory:
      description: Budget payment type - according BNB nomenclature.
      type: string
      pattern: '^\d{6}$|^\d{2}$'

    BGBudgetDocumentNumber:
      description: The number of the document.
      type: string
      pattern: '^.{0,17}$'

    BGRegulatoryReportType:
      description: The type of the document.
      type: string
      pattern: '^[1-69]$'

    BGTaxPayerId:
      description: Bulstat/EGN/ENC(LNC) of the obliged party.
      type: string
      minLength: 9
      maxLength: 13

    BGTaxPayerName:
      description: The name of the obliged party.
      type: string
      minLength: 1
      maxLength: 35

    BGTaxPayerType:
      description: The tax type code of the obliged party.
      example: 'EGN'
      type: string
      enum:
        - EGN
        - EIK
        - PNF

    InstructionPriority:
      description: Serves the closer specification of the transfer priority.
      type: string
      enum:
        - HIGH
        - NORMAL
      example: 'NORMAL'


    CreditorAgentName:
      description: Name of creditor financial agent.
      example: Merchant123
      type: string
      maxLength: 140

    ChargeBearer:
      description: |
        Specifies which party/parties will bear the charges associated with the processing of the payment transaction.
      x-enum-elements:
        - name: CRED
          description: 'CREDITOR'
        - name: DEBT
          description: 'DEBTOR'
        - name: SHAR
          description: 'SHARED'
        - name: SLEV
          description: 'SLEV'
      type: string
      enum:
        - CRED
        - DEBT
        - SHAR
        - SLEV
      example: CRED

    Error:
      type: object
      properties:
        id:
          type: string
          description: Unique UUID for audit purposes.
        code:
          type: string
          description: Optional error code for reporting purposes.
        description:
          type: string
          description: The description of the error.

    CreditTransferCommon:
      type: object
      description: Common attrubutes of a credit transfer initiation request and an initiated credit transfer.
      required:
        - externalPaymentId
        - amount
        - debtorAccount
        - creditorAccount
      properties:
        externalPaymentId:
          $ref: '#/components/schemas/ExternalPaymentId'
        endToEndId:
          $ref: '#/components/schemas/EndToEndIdentification'
        amount:
          $ref: "#/components/schemas/Amount"
        exchangeRateInformation:
          $ref: '#/components/schemas/ExchangeRateInformation'
        debtor:
          $ref: '#/components/schemas/Debtor'
        debtorAccount:
          $ref: "#/components/schemas/DebtorAccount"
        creditorAccount:
          $ref: "#/components/schemas/CreditorAccount"
        creditor:
          $ref: "#/components/schemas/Creditor"
        creditorAgent:
          $ref: '#/components/schemas/Bicfi'
        creditorAgentName:
          $ref: '#/components/schemas/CreditorAgentName'
        remittanceInformationStructured:
          $ref: '#/components/schemas/RemittanceInformationStructured'
        remittanceInformationUnstructured:
          $ref: '#/components/schemas/RemittanceInformationUnstructured'
        purposeCode:
          $ref: '#/components/schemas/PurposeCode'
        categoryPurpose:
          $ref: '#/components/schemas/CategoryPurposeCode'
        instructionPriority:
          $ref: '#/components/schemas/InstructionPriority'
        chargeBearer:
          $ref: '#/components/schemas/ChargeBearer'
        intermediary:
          type: array
          items:
            $ref: '#/components/schemas/Intermediary'
        ultimateDebtor:
          $ref: '#/components/schemas/UltimateDebtor'
        ultimateCreditor:
          $ref: '#/components/schemas/UltimateCreditor'





    CreditTransfer:
      description: Initiated credit transfer.
      allOf:
        - $ref: '#/components/schemas/CreditTransferCommon'
        - type: object
          properties:
            paymentId:
              $ref: '#/components/schemas/PaymentId'
            status:
              $ref: '#/components/schemas/PaymentStatus'
            statusDescription:
              $ref: '#/components/schemas/StatusDescription'
            isoStatusReasonCode:
              $ref: '#/components/schemas/IsoStatusReasonCode'
            transactionFees:
              $ref: '#/components/schemas/TransactionFeeAmount'
            maxSCA:
              $ref: '#/components/schemas/MaxSCA'

    DomesticSingleCreditTransfer:
      allOf:
        - type: object
          description: This is additional for domestic payment initiation.
          required:
            - paymentType
          properties:
            paymentType:
              type: string
              description: Indicates domestic transfer type.
              enum:
                - DOMESTIC
              example: 'DOMESTIC'
            serviceLevel:
              $ref: '#/components/schemas/DomesticServiceLevel'
        - $ref: '#/components/schemas/CreditTransfer'
        - $ref: '#/components/schemas/SinglePaymentOrderCommon'

    SepaSingleCreditTransfer:
      description: SEPA sinngle credit transfer attributes.
      allOf:
        - $ref: '#/components/schemas/CreditTransfer'
        - $ref: '#/components/schemas/SinglePaymentOrderCommon'
        - type: object
          description: This is additional for SEPA payment initiation.
          required:
            - paymentType
          properties:
            paymentType:
              type: string
              description: Indicates SEPA transfer type.
              enum:
                - SEPA
              example: 'SEPA'



    ForeignSingleCreditTransfer:
      allOf:
        - $ref: '#/components/schemas/CreditTransfer'
        - $ref: '#/components/schemas/SinglePaymentOrderCommon'
        - type: object
          description: This is additional for domestic payment initiation.
          required:
            - paymentType
          properties:
            paymentType:
              type: string
              description: Indicates foreign (cross border) transfer type.
              enum:
                - FOREIGN
              example: 'FOREIGN'
            serviceLevel:
              $ref: '#/components/schemas/ForeignServiceLevel'


    DomesticStandingCreditTransfer:
      allOf:
        - type: object
          description: This is additional for domestic payment initiation.
          required:
            - paymentType
          properties:
            paymentType:
              type: string
              description: Indicates domestic transfer type.
              enum:
                - DOMESTIC
              example: 'DOMESTIC'
            serviceLevel:
              $ref: '#/components/schemas/DomesticServiceLevel'
        - $ref: '#/components/schemas/CreditTransfer'
        - $ref: '#/components/schemas/StandingPaymentOrderCommon'




    SepaStandingCreditTransfer:
      description: SEPA sinngle credit transfer attributes.
      allOf:
        - $ref: '#/components/schemas/CreditTransfer'
        - $ref: '#/components/schemas/StandingPaymentOrderCommon'
        - type: object
          description: This is additional for SEPA payment initiation.
          required:
            - paymentType
          properties:
            paymentType:
              type: string
              description: Indicates SEPA transfer type.
              enum:
                - SEPA
              example: 'SEPA'


    ForeignStandingCreditTransfer:
      allOf:
        - $ref: '#/components/schemas/CreditTransfer'
        - $ref: '#/components/schemas/StandingPaymentOrderCommon'
        - type: object
          description: This is additional for domestic payment initiation.
          required:
            - paymentType
          properties:
            paymentType:
              type: string
              description: Indicates foreign (cross border) transfer type.
              enum:
                - FOREIGN
              example: 'FOREIGN'
            serviceLevel:
              $ref: '#/components/schemas/ForeignServiceLevel'


    MaxSCA:
      description: |
        Maximum SCA needed for multilevel SCA - NWB add maximum number of SCA into init payment response.
        The purpose of maxSCA is to provide information if strong customer authorization (SCA) is required in order to proceed with the payment order execution. Depending on the values 0 - no SCA is required, 1 - SCA made by a maximum of one signee is required, 2 - SCA made by a maximum of two signees is required (it is still possible that authorization by one signee is enough if empowered).
      example: 1
      type: integer

    CreditTransferFees:
      description: An array of transaction fees for a credit transfer.
      type: array
      items:
        $ref: '#/components/schemas/CreditTransferFeesItem'



    CreditTransferFeesItem:
      allOf:
        - type: object
          properties:
            feeType:
              type: string
              enum:
                - CONVERSION_FEE
                - TRANSACTION_FEE
        - $ref: '#/components/schemas/TransactionFeeAmount'

    TransactionFeeAmount:
      description: Amount of the transaction in the Account's currency.
      allOf:
        - type: object
          properties:
            amount:
              description: Amount for the Balance Type.
              type: number
            currency:
              $ref: '#/components/schemas/CurrencyCode'
            amountInAccountCurrency:
              description: Amount for the Balance Type.
              type: number

    PaymentStatus:
      title: transactionStatus
      example: ACCP
      x-enum-elements:
        - name: ACCC
          description: 'AcceptedSettlementCompleted - Money Credited'
        - name: ACCP
          description: 'AcceptedCustomerProfile'
        - name: ACSC
          description: 'AcceptedSettlementCompleted'
        - name: ACSP
          description: 'AcceptedSettlementInProgress'
        - name: ACTC
          description: 'AcceptedTechnicalValidation'
        - name: ACWC
          description: 'AcceptedWithChange'
        - name: ACWP
          description: 'AcceptedWithoutPosting'
        - name: RCVD
          description: 'Received'
        - name: PDNG
          description: 'Pending'
        - name: PATC
          description: 'PartiallyAcceptedTechnical'
        - name: RJCT
          description: 'Rejected'
        - name: CANC
          description: 'Cancelled'
      type: string
      enum:
        - ACCC
        - ACCP
        - ACSC
        - ACSP
        - ACTC
        - ACWC
        - ACWP
        - RCVD
        - PDNG
        - PATC
        - RJCT
        - CANC


    CurrencyCode:
      type: string
      description: ISO 4217 Alpha 3 currency code.
      maxLength: 3
      pattern: '[A-Z]{3}'
      example: 'EUR'


    CountryCode:
      description: ISO 3166 ALPHA2 country code.
      type: string
      pattern: '[A-Z]{2}'
      example: 'SE'

    Bban:
      description: |
        Basic Bank Account Number (BBAN) Identifier

        This data element can be used in the body of the Consent Request
          Message for retrieving Account access Consent from this Account. This
          data elements is used for payment Accounts which have no IBAN.
          ISO20022: Basic Bank Account Number (BBAN).

          Identifier used nationally by financial institutions, i.e., in individual countries,
          generally as part of a National Account Numbering Scheme(s),
          which uniquely identifies the account of a customer.
      type: string
      pattern: '[a-zA-Z0-9]{1,30}'
      example: 'BARC12345612345678'

    Bicfi:
      description: BICFI ISO 9362.
      type: string
      pattern: '[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}'
      example: 'AAAADEBBXXX'

    Iban:
      type: string
      description: IBAN of an account.
      pattern: '[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}'
      example: 'FR7612345987650123456789014'

    Msisdn:
      type: string
      maxLength: 35
      description: Mobile phone number.
      example: '+491701234567'

    Email:
      type: string
      maxLength: 140
      description: Mobile phone number.
      example: 'hans.meier@gmail.com'

    TaxIdentification:
      description: Contains party tax identifier.
      type: string
      minLength: 1
      maxLength: 35

    Pan:
      description: Primary Account Number according to ISO/IEC 7812.
      type: string
      maxLength: 35
      example: '5409050000000000'

    ExternalPaymentId:
      description: |
        ExternalPaymentID is assigned by API consumers in order to search payments by known to the
          consumer payment identifier. In order to avoid payment duplication value passed in ExternalPaymentID
          must be unique and the use of the same value must cause user error (HTTP status code 400).
      example: PAY-21765-AF
      type: string

    Date:
      type: string
      format: date
      example: '2020-05-05'



    PaymentId:
      description: |
        PaymentId is assigned by API provider in order to uniquely identify resources created when a valid payment
        initiation request is processed.
      example: 1234-wertiq-983
      type: string

    StatusDescription:
      description: Description of payment status.
      example: payment init accepted
      type: string

    IsoStatusReasonCode:
      description: |
        The purpose of isoStatusReasonCode is to optionally provide additional information about the reason why the transaactio entered specific state.
        The full list of possible values is listed in https://www.iso20022.org/catalogue-messages/additional-content-messages/external-code-sets ExternalStatusReason1Code.
      example: AM06
      type: string

    Intermediary:
      type: object
      description: Agent and Account between the debtor and the creditor.
      properties:
        account:
          $ref: '#/components/schemas/IntermediaryAccount'
        agent:
          $ref: '#/components/schemas/AccountAgent'

    IntermediaryAccount:
      type: object
      description: Account identification.
      properties:
        identification:
          $ref: '#/components/schemas/IntermediaryAccountIdentification'
        currency:
          $ref: '#/components/schemas/CurrencyCode'
      required:
        - identification

    IntermediaryAccountIdentification:
      description: Required iban or otherId.
      type: object
      properties:
        iban:
          type: string
          description: Account IBAN.
          example: 'AT913225000000420018'
          minLength: 1
          maxLength: 34
          pattern: '^[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}$'
        otherIdentification:
          $ref: '#/components/schemas/OtherId'


    OtherId:
      description: Other identification of an account or agent.
      type: object
      properties:
        id:
          $ref: '#/components/schemas/OtherUniqueIdentification'
        issuer:
          type: string
          minLength: 1
          maxLength: 35
        scheme:
          $ref: '#/components/schemas/OtherScheme'

    OtherUniqueIdentification:
      type: string
      description: Other unique identification.
      example: MCCT1306251365420971215
      minLength: 1
      maxLength: 35


    OtherScheme:
      type: object
      properties:
        code:
          minLength: 1
          maxLength: 4
          type: string
        proprietary:
          minLength: 1
          maxLength: 35
          type: string

    AccountAgent:
      type: object
      description: The Financial institution which is servicing an account. Either BIC name of otherID are required.
      properties:
        financialInstitutionIdentification:
          $ref: '#/components/schemas/FinancialInstitutionIdentification'
      required:
        - financialInstitutionIdentification

    FinancialInstitutionIdentification:
      type: object
      properties:
        bic:
          $ref: '#/components/schemas/Bicfi'
        name:
          type: string
          description: Name of the account servicing institution. Only used for creditor agent.
          example: 'EXAMPLE BANK'
          minLength: 1
          maxLength: 140
        otherIdentification:
          $ref: '#/components/schemas/OtherId'

    ExchangeRateInformation:
      description: Set of elements used to provide details on the currency exchange rate and contract.
      type: object
      properties:
        exchangeRate:
          description: Exchange rate.
          type: string
          minLength: 1
          maxLength: 11
          example: '1.54'
        rateType:
          $ref: '#/components/schemas/RateType'
        contractId:
          $ref: '#/components/schemas/OtherUniqueIdentification'
      required:
        - contractId

    RateType:
      type: string
      example: AGRD
      enum:
        - SPOT
        - SALE
        - AGRD

    SubmitCreditTransfer:
      type: object
      description: Single credit transfer submittion data.
      required:
        - authorizationToken
      properties:
        authorizationToken:
          type: string
          description: |
            One-time authorization token returned by Authorization API which proofes that payment order is authorizazed by all mandatory parties.
            The token has a form of Signed JSON Web Token containing authorization details as specified in https://tools.ietf.org/html/draft-ietf-oauth-rar-04
          example:
            'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2Nlc3NfdG9rZW4iOiIyWW90bkZaRkVqcjF6Q3NpY01XcEFBIiwidG9rZW5fdHlwZSI6ImV4YW1wbGUiLCJleHBpcmVzX2
            luIjozNjAwLCJyZWZyZXNoX3Rva2VuIjoidEd6djNKT2tGMFhHNVF4MlRsS1dJQSIsImF1dGhvcml6YXRpb25fZGV0YWlscyI6W3sidHlwZSI6InBheW1lbnRfaW5pdGlhdGlvbi
            IsImluc3RydWN0ZWRBbW91bnQiOnsiY3VycmVuY3kiOiJFVVIiLCJhbW91bnQiOiIxMjMuNTAifSwiY3JlZGl0b3JOYW1lIjoiTWVyY2hhbnQxMjMiLCJjcmVkaXRvckFjY291bn
            QiOnsiaWJhbiI6IkRFMDIxMDAxMDAxMDkzMDcxMTg2MDMifSwicmVtaXR0YW5jZUluZm9ybWF0aW9uVW5zdHJ1Y3R1cmVkIjoiUmVmIE51bWJlciBNZXJjaGFudCJ9XX0.y4x6jC
            dgCO7suQslnoTSTVM0P7xVdytPcypATlQXDDE'

    OffsetPaginationMetadata:
      type: object
      description: Offset pagination data.
      properties:
        limit:
          type: number
          description: Limit parameter from the request or default.
        offset:
          type: number
          description: Offset parameter from the request or 0.
        nextOffset:
          type: number
          description: |
            Offset of the next page if exists, otherwise <null>.
            Calculated from query parameters. If sum of offset and limit is less then collection size then we will
            return summary result if greater then offset will be returned.
        previousOffset:
          type: number
          description: |
            Offset of the previous page if exists, otherwise 0.
            Calculated from query parameters by substracting limit from offset.
            If value is grater than zero then substraction result is returned if less then 0 will be placed to previousOffset.
        size:
          type: number
          description: Cardinality of accounts list set.

    PostSingleCreditTransferResponse:
      type: object
      description: The response for single credit transfer initiation.
      oneOf:
        - $ref: '#/components/schemas/DomesticSingleCreditTransfer'
        - $ref: '#/components/schemas/SepaSingleCreditTransfer'
        - $ref: '#/components/schemas/ForeignSingleCreditTransfer'
      discriminator:
        propertyName: paymentType
        mapping:
          DOMESTIC: '#/components/schemas/DomesticSingleCreditTransfer'
          SEPA: '#/components/schemas/SepaSingleCreditTransfer'
          FOREIGN: '#/components/schemas/ForeignSingleCreditTransfer'
      properties:
        authorizationRequest:
          type: string
          description: |
            Signed JSON Web Token containing Rich Authorization Request (https://tools.ietf.org/html/draft-ietf-oauth-rar-04)
            with payment order attributes to be used for Strong Customer Authentication.
          example:
            'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoicGF5bWVudF9pbml0aWF0aW9uIiwiaW5zdHJ1Y3RlZEFtb3VudCI6eyJjdXJyZW5jeSI6IkVVUiIsImFtb3VudCI6IjEyMy41MCJ9LC
                          JjcmVkaXRvck5hbWUiOiJNZXJjaGFudDEyMyIsImNyZWRpdG9yQWNjb3VudCI6eyJpYmFuIjoiREUwMjEwMDEwMDEwOTMwNzExODYwMyJ9LCJyZW1pdHRhbmNlSW5mb3JtYXRpb25VbnN0cnVjdHVyZWQ
                          iOiJSZWYgTnVtYmVyIE1lcmNoYW50In0.MUBNsl45jdiRr8URcq6otexrmzgkY27kPkvDedC_wDI'

    CalculateFeeSingleCreditTransferResponse:
      type: object
      properties:
        fees:
          $ref: '#/components/schemas/CreditTransferFees'
      example:
        {
          "fees":[
            {
              "feeType": "CONVERSION_FEE",
              "amount": 0.10,
              "currency": "EUR",
              "amountInAccountCurrency": 1.23
            },
            {
              "feeType": "TRANSACTION_FEE",
              "amount": 1.0,
              "currency": "EUR",
              "amountInAccountCurrency": 12.3
            }
          ]
        }

    GetSingleCreditTransfersListResponse:
      type: object
      properties:
        transfers:
          type: array
          items:
            $ref: '#/components/schemas/SingleCreditTransfer'
        metadata:
          $ref: '#/components/schemas/OffsetPaginationMetadata'

    GetStandingCreditTransfersListResponse:
      type: object
      properties:
        transfers:
          type: array
          items:
            $ref: '#/components/schemas/StandingCreditTransfer'
        metadata:
          $ref: '#/components/schemas/OffsetPaginationMetadata'

    PostStandingCreditTransferResponse:
      type: object
      description: The response for single credit transfer initiation.
      oneOf:
        - $ref: '#/components/schemas/DomesticStandingCreditTransfer'
        - $ref: '#/components/schemas/SepaStandingCreditTransfer'
        - $ref: '#/components/schemas/ForeignStandingCreditTransfer'
      discriminator:
        propertyName: paymentType
        mapping:
          DOMESTIC: '#/components/schemas/DomesticStandingCreditTransfer'
          SEPA: '#/components/schemas/SepaStandingCreditTransfer'
          FOREIGN: '#/components/schemas/ForeignStandingCreditTransfer'
      properties:
        authorizationRequest:
          type: string
          description: |
            Signed JSON Web Token containing Rich Authorization Request (https://tools.ietf.org/html/draft-ietf-oauth-rar-04) with payment order attributes to be used for Strong Customer Authentication
          example:
            'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoicGF5bWVudF9pbml0aWF0aW9uIiwiaW5zdHJ1Y3RlZEFtb3VudCI6eyJjdXJyZW5jeSI6IkVVUiIsImFtb3VudCI6IjEyMy41MCJ9LC
                          JjcmVkaXRvck5hbWUiOiJNZXJjaGFudDEyMyIsImNyZWRpdG9yQWNjb3VudCI6eyJpYmFuIjoiREUwMjEwMDEwMDEwOTMwNzExODYwMyJ9LCJyZW1pdHRhbmNlSW5mb3JtYXRpb25VbnN0cnVjdHVyZWQ
                          iOiJSZWYgTnVtYmVyIE1lcmNoYW50In0.MUBNsl45jdiRr8URcq6otexrmzgkY27kPkvDedC_wDI'

    PostSingleCreditTransferRequest:
      oneOf:
        - $ref: '#/components/schemas/DomesticSingleCreditTransferInitiation'
        - $ref: '#/components/schemas/ForeignSingleCreditTransferInitiation'
        - $ref: '#/components/schemas/SepaSingleCreditTransferInitiation'
      discriminator:
        propertyName: paymentType
        mapping:
          DOMESTIC: '#/components/schemas/DomesticSingleCreditTransferInitiation'
          FOREIGN: '#/components/schemas/ForeignSingleCreditTransferInitiation'
          SEPA: '#/components/schemas/SepaSingleCreditTransferInitiation'

    CalculateFeeSingleCreditTransferRequest:
      oneOf:
        - $ref: '#/components/schemas/DomesticSingleCreditTransferInitiation'
        - $ref: '#/components/schemas/ForeignSingleCreditTransferInitiation'
        - $ref: '#/components/schemas/SepaSingleCreditTransferInitiation'
      discriminator:
        propertyName: paymentType
        mapping:
          DOMESTIC: '#/components/schemas/DomesticSingleCreditTransferInitiation'
          FOREIGN: '#/components/schemas/ForeignSingleCreditTransferInitiation'
          SEPA: '#/components/schemas/SepaSingleCreditTransferInitiation'

    PostStandingCreditTransferRequest:
      oneOf:
        - $ref: '#/components/schemas/DomesticStandingCreditTransferInitiation'
        - $ref: '#/components/schemas/ForeignStandingCreditTransferInitiation'
        - $ref: '#/components/schemas/SepaStandingCreditTransferInitiation'
      discriminator:
        propertyName: paymentType
        mapping:
          DOMESTIC: '#/components/schemas/DomesticStandingCreditTransferInitiation'
          FOREIGN: '#/components/schemas/ForeignStandingCreditTransferInitiation'
          SEPA: '#/components/schemas/SepaStandingCreditTransferInitiation'


  links:
    GetCreditTransfersListOffsetPaginationNextPage:
      description: Url to the next page in offset paging.
      operationId: getSingleCreditTrasfers
      parameters:
        limit: '$response.body#/metadata/limit'
        offset: '$response.body#/metadata/nextOffset'
    GetCreditTransfersListOffsetPaginationPreviousPage:
      description: Url to the previous page in offset paging.
      operationId: getSingleCreditTrasfers
      parameters:
        limit: '$response.body#/metadata/limit'
        offset: '$response.body#/metadata/previousOffset'
    GetCreditTransferDetails:
      description: Url to details of the specific account.
      operationId: getSingleCreditTransfer
      parameters:
        paymentId: '$response.body#/paymentId'
